openapi: 3.0.3
info:
    title: weather.gov API
    description: weather.gov API
    version: 1.9.0
servers:
    -
        url: https://api.weather.gov
        description: Production server
externalDocs:
    description: Full API documentation
    url: https://www.weather.gov/documentation/services-web-api
security:
    - userAgent: []
paths:
    /alerts:
        get:
            operationId: alerts_query
            x-symfony:
                controller: App\Controller\AlertController::alertQueryAction
            description: Returns all alerts
            parameters:
                -
                    name: active
                    in: query
                    deprecated: true
                    description: List only active alerts (use /alerts/active endpoints instead)
                    schema:
                        type: boolean
                - $ref: '#/components/parameters/QueryStartTime'
                - $ref: '#/components/parameters/QueryEndTime'
                - $ref: '#/components/parameters/AlertStatus'
                - $ref: '#/components/parameters/AlertMessageType'
                - $ref: '#/components/parameters/AlertEventName'
                - $ref: '#/components/parameters/AlertCode'
                - $ref: '#/components/parameters/AlertArea'
                - $ref: '#/components/parameters/AlertPoint'
                - $ref: '#/components/parameters/AlertRegion'
                - $ref: '#/components/parameters/AlertRegionType'
                - $ref: '#/components/parameters/AlertZone'
                - $ref: '#/components/parameters/AlertUrgency'
                - $ref: '#/components/parameters/AlertSeverity'
                - $ref: '#/components/parameters/AlertCertainty'
                - $ref: '#/components/parameters/Limit'
                - $ref: '#/components/parameters/PaginationCursor'
            responses:
                '200':
                    $ref: '#/components/responses/AlertCollection'
                '301':
                    description: Certain common queries may be redirected to discrete URLs
                default:
                    $ref: '#/components/responses/Error'
    /alerts/active:
        get:
            operationId: alerts_active
            x-symfony:
                controller: App\Controller\AlertController::allActiveAlertsAction
            description: Returns all currently active alerts
            parameters:
                - $ref: '#/components/parameters/AlertStatus'
                - $ref: '#/components/parameters/AlertMessageType'
                - $ref: '#/components/parameters/AlertEventName'
                - $ref: '#/components/parameters/AlertCode'
                - $ref: '#/components/parameters/AlertArea'
                - $ref: '#/components/parameters/AlertPoint'
                - $ref: '#/components/parameters/AlertRegion'
                - $ref: '#/components/parameters/AlertRegionType'
                - $ref: '#/components/parameters/AlertZone'
                - $ref: '#/components/parameters/AlertUrgency'
                - $ref: '#/components/parameters/AlertSeverity'
                - $ref: '#/components/parameters/AlertCertainty'
                - $ref: '#/components/parameters/Limit'
            responses:
                '200':
                    $ref: '#/components/responses/AlertCollection'
                '301':
                    description: Certain common queries may be redirected to discrete URLs
                default:
                    $ref: '#/components/responses/Error'
    /alerts/active/count:
        get:
            operationId: alerts_active_count
            x-symfony:
                controller: App\Controller\AlertController::allActiveAlertsCountAction
            description: Returns info on the number of active alerts
            responses:
                '200':
                    description: A data structure showing the counts of active alerts broken down by various categories
                    headers:
                        X-Correlation-Id:
                            $ref: '#/components/headers/CorrelationId'
                        X-Request-Id:
                            $ref: '#/components/headers/RequestId'
                        X-Server-Id:
                            $ref: '#/components/headers/ServerId'
                    content:
                        application/ld+json:
                            schema:
                                type: object
                                properties:
                                    total:
                                        description: The total number of active alerts
                                        type: integer
                                        minimum: 0
                                    land:
                                        description: The total number of active alerts affecting land zones
                                        type: integer
                                        minimum: 0
                                    marine:
                                        description: The total number of active alerts affecting marine zones
                                        type: integer
                                        minimum: 0
                                    regions:
                                        description: Active alerts by marine region
                                        type: object
                                        additionalProperties:
                                            type: integer
                                            minimum: 1
                                    areas:
                                        description: Active alerts by area (state/territory)
                                        type: object
                                        additionalProperties:
                                            type: integer
                                            minimum: 1
                                    zones:
                                        description: Active alerts by NWS public zone or county code
                                        type: object
                                        additionalProperties:
                                            type: integer
                                            minimum: 1
                default:
                    $ref: '#/components/responses/Error'
    /alerts/active/zone/{zoneId}:
        parameters:
            - $ref: '#/components/parameters/NWSZoneId'
        get:
            operationId: alerts_active_zone
            x-symfony:
                controller: App\Controller\AlertController::activeAlertsByZoneAction
            description: Returns active alerts for the given NWS public zone or county
            responses:
                '200':
                    $ref: '#/components/responses/AlertCollection'
                default:
                    $ref: '#/components/responses/Error'
    /alerts/active/area/{area}:
        parameters:
            -
                name: area
                in: path
                required: true
                description: State/area ID
                schema:
                    $ref: '#/components/schemas/AreaCode'
        get:
            operationId: alerts_active_area
            x-symfony:
                controller: App\Controller\AlertController::activeAlertsByAreaAction
            description: Returns active alerts for the given area (state or marine area)
            responses:
                '200':
                    $ref: '#/components/responses/AlertCollection'
                default:
                    $ref: '#/components/responses/Error'
    /alerts/active/region/{region}:
        parameters:
            -
                name: region
                in: path
                required: true
                description: Marine region ID
                schema:
                    $ref: '#/components/schemas/MarineRegionCode'
        get:
            operationId: alerts_active_region
            x-symfony:
                controller: App\Controller\AlertController::activeAlertsByRegionAction
            description: Returns active alerts for the given marine region
            responses:
                '200':
                    $ref: '#/components/responses/AlertCollection'
                default:
                    $ref: '#/components/responses/Error'
    /alerts/types:
        get:
            operationId: alerts_types
            x-symfony:
                controller: App\Controller\AlertController::alertTypesAction
            description: Returns a list of alert types
            responses:
                '200':
                    description: A list of recognized event types
                    headers:
                        X-Correlation-Id:
                            $ref: '#/components/headers/CorrelationId'
                        X-Request-Id:
                            $ref: '#/components/headers/RequestId'
                        X-Server-Id:
                            $ref: '#/components/headers/ServerId'
                    content:
                        application/ld+json:
                            schema:
                                type: object
                                properties:
                                    eventTypes:
                                        description: A list of recognized event types
                                        type: array
                                        items:
                                            type: string
                default:
                    $ref: '#/components/responses/Error'
    /alerts/{id}:
        parameters:
            -
                name: id
                in: path
                required: true
                description: Alert identifier
                schema:
                    $ref: '#/components/schemas/AlertId'
        get:
            operationId: alerts_single
            x-symfony:
                controller: App\Controller\AlertController::singleAlertAction
                priority: -100
            description: Returns a specific alert
            responses:
                '200':
                    description: An alert record
                    headers:
                        X-Correlation-Id:
                            $ref: '#/components/headers/CorrelationId'
                        X-Request-Id:
                            $ref: '#/components/headers/RequestId'
                        X-Server-Id:
                            $ref: '#/components/headers/ServerId'
                    content:
                        application/geo+json:
                            schema:
                                $ref: '#/components/schemas/AlertGeoJson'
                        application/ld+json:
                            schema:
                                $ref: '#/components/schemas/AlertJsonLd'
                        application/cap+xml:
                            schema:
                                $ref: '#/components/schemas/AlertCap'
                default:
                    $ref: '#/components/responses/Error'
    /aviation/cwsus/{cwsuId}:
        get:
            operationId: cwsu
            x-symfony:
                controller: App\Controller\AviationController::cwsuAction
            description: Returns metadata about a Center Weather Service Unit
            parameters:
                - $ref: '#/components/parameters/NWSCenterWeatherServiceUnitId'
            responses:
                '200':
                    description: success
                    content:
                        application/ld+json:
                            schema:
                                $ref: '#/components/schemas/CenterWeatherServiceUnitJsonLd'
                default:
                    $ref: '#/components/responses/Error'
    /aviation/cwsus/{cwsuId}/cwas:
        get:
            operationId: cwas
            x-symfony:
                controller: App\Controller\AviationController::cwasAction
            description: Returns a list of Center Weather Advisories from a CWSU
            parameters:
                - $ref: '#/components/parameters/NWSCenterWeatherServiceUnitId'
            responses:
                '200':
                    description: success
                    content:
                        application/geo+json:
                            schema:
                                $ref: '#/components/schemas/CenterWeatherAdvisoryCollectionGeoJson'
                default:
                    $ref: '#/components/responses/Error'
    /aviation/cwsus/{cwsuId}/cwas/{date}/{sequence}:
        get:
            operationId: cwa
            x-symfony:
                controller: App\Controller\AviationController::cwaAction
            description: Returns a list of Center Weather Advisories from a CWSU
            parameters:
                - $ref: '#/components/parameters/NWSCenterWeatherServiceUnitId'
                - $ref: '#/components/parameters/Date'
                -
                    name: sequence
                    in: path
                    required: true
                    description: Sequence number
                    schema:
                        type: integer
                        minimum: 100
            responses:
                '200':
                    description: success
                    content:
                        application/geo+json:
                            schema:
                                $ref: '#/components/schemas/CenterWeatherAdvisoryGeoJson'
                        application/vnd.noaa.uswx+xml:
                            schema: {}
                default:
                    $ref: '#/components/responses/Error'
    /aviation/sigmets:
        get:
            operationId: sigmetQuery
            x-symfony:
                controller: App\Controller\AviationController::sigmetQueryAction
            description: Returns a list of SIGMET/AIRMETs
            parameters:
                - $ref: '#/components/parameters/QueryStartTime'
                - $ref: '#/components/parameters/QueryEndTime'
                - $ref: '#/components/parameters/QueryDate'
                -
                    name: fir
                    in: query
                    description: FIR identifier
                    schema:
                        $ref: '#/components/schemas/FIRIdentifier'
                -
                    name: sequence
                    in: query
                    description: SIGMET sequence number
                    schema:
                        $ref: '#/components/schemas/SigmetSequenceNumber'
            responses:
                '200':
                    description: success
                    content:
                        application/geo+json:
                            schema:
                                $ref: '#/components/schemas/SigmetCollectionGeoJson'
                default:
                    $ref: '#/components/responses/Error'
    /aviation/sigmets/{fir}:
        get:
            operationId: sigmetsByFIR
            x-symfony:
                controller: App\Controller\AviationController::sigmetQueryAction
            description: Returns a list of SIGMET/AIRMETs for the specified FIR
            parameters:
                - $ref: '#/components/parameters/FIRIdentifier'
            responses:
                '200':
                    description: success
                    content:
                        application/geo+json:
                            schema:
                                $ref: '#/components/schemas/SigmetCollectionGeoJson'
                default:
                    $ref: '#/components/responses/Error'
    /aviation/sigmets/{fir}/{date}:
        get:
            operationId: sigmetsByFIRByDate
            x-symfony:
                controller: App\Controller\AviationController::sigmetQueryAction
            description: Returns a list of SIGMET/AIRMETs for the specified FIR for the specified date
            parameters:
                - $ref: '#/components/parameters/FIRIdentifier'
                - $ref: '#/components/parameters/Date'
            responses:
                '200':
                    description: success
                    content:
                        application/geo+json:
                            schema:
                                $ref: '#/components/schemas/SigmetCollectionGeoJson'
                default:
                    $ref: '#/components/responses/Error'
    /aviation/sigmets/{fir}/{date}/{sequence}:
        get:
            operationId: sigmet
            x-symfony:
                controller: App\Controller\AviationController::sigmetAction
            description: Returns a specific SIGMET/AIRMET
            parameters:
                - $ref: '#/components/parameters/FIRIdentifier'
                - $ref: '#/components/parameters/Date'
                - $ref: '#/components/parameters/SigmetSequenceNumber'
            responses:
                '200':
                    description: success
                    content:
                        application/geo+json:
                            schema:
                                $ref: '#/components/schemas/SigmetGeoJson'
                        application/vnd.noaa.uswx+xml:
                            schema: {}
                default:
                    $ref: '#/components/responses/Error'
    /glossary:
        get:
            operationId: glossary
            x-symfony:
                controller: App\Controller\GlossaryController::glossaryAction
            description: Returns glossary terms
            responses:
                '200':
                    description: A set of glossary terms
                    headers:
                        X-Correlation-Id:
                            $ref: '#/components/headers/CorrelationId'
                        X-Request-Id:
                            $ref: '#/components/headers/RequestId'
                        X-Server-Id:
                            $ref: '#/components/headers/ServerId'
                    content:
                        application/ld+json:
                            schema:
                                type: object
                                properties:
                                    '@context':
                                        $ref: '#/components/schemas/JsonLdContext'
                                    glossary:
                                        description: A list of glossary terms
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                term:
                                                    description: The term being defined
                                                    type: string
                                                definition:
                                                    description: A definition for the term
                                                    type: string
                default:
                    $ref: '#/components/responses/Error'
    /gridpoints/{wfo}/{x},{y}:
        parameters:
            - $ref: '#/components/parameters/GridpointWFO'
            - $ref: '#/components/parameters/GridpointX'
            - $ref: '#/components/parameters/GridpointY'
        get:
            operationId: gridpoint
            x-symfony:
                controller: App\Controller\GridpointController::gridpointAction
            description: Returns raw numerical forecast data for a 2.5km grid area
            parameters:
                - $ref: '#/components/parameters/Debug'
            responses:
                '200':
                    description: Gridpoint forecast data
                    headers:
                        X-Correlation-Id:
                            $ref: '#/components/headers/CorrelationId'
                        X-Request-Id:
                            $ref: '#/components/headers/RequestId'
                        X-Server-Id:
                            $ref: '#/components/headers/ServerId'
                    content:
                        application/geo+json:
                            schema:
                                $ref: '#/components/schemas/GridpointGeoJson'
                        application/ld+json:
                            schema:
                                $ref: '#/components/schemas/GridpointJsonLd'
                default:
                    $ref: '#/components/responses/Error'
    /gridpoints/{wfo}/{x},{y}/forecast:
        parameters:
            - $ref: '#/components/parameters/GridpointWFO'
            - $ref: '#/components/parameters/GridpointX'
            - $ref: '#/components/parameters/GridpointY'
        get:
            operationId: gridpoint_forecast
            x-symfony:
                controller: App\Controller\GridpointController::gridpointForecastAction
            description: Returns a textual forecast for a 2.5km grid area
            parameters:
                - $ref: '#/components/parameters/Debug'
                - $ref: '#/components/parameters/GridpointForecastFeatureFlags'
                - $ref: '#/components/parameters/GridpointForecastUnits'
            responses:
                '200':
                    $ref: '#/components/responses/GridpointForecast'
                default:
                    $ref: '#/components/responses/Error'
    /gridpoints/{wfo}/{x},{y}/forecast/hourly:
        parameters:
            - $ref: '#/components/parameters/GridpointWFO'
            - $ref: '#/components/parameters/GridpointX'
            - $ref: '#/components/parameters/GridpointY'
        get:
            operationId: gridpoint_forecast_hourly
            x-symfony:
                controller: App\Controller\GridpointController::gridpointHourlyForecastAction
            description: Returns a textual hourly forecast for a 2.5km grid area
            parameters:
                - $ref: '#/components/parameters/Debug'
                - $ref: '#/components/parameters/GridpointForecastFeatureFlags'
                - $ref: '#/components/parameters/GridpointForecastUnits'
            responses:
                '200':
                    $ref: '#/components/responses/GridpointForecast'
                default:
                    $ref: '#/components/responses/Error'
    /gridpoints/{wfo}/{x},{y}/stations:
        parameters:
            - $ref: '#/components/parameters/GridpointWFO'
            - $ref: '#/components/parameters/GridpointX'
            - $ref: '#/components/parameters/GridpointY'
        get:
            operationId: gridpoint_stations
            x-symfony:
                controller: App\Controller\GridpointController::gridpointStationsAction
            description: Returns a list of observation stations usable for a given 2.5km grid area
            responses:
                '200':
                    $ref: '#/components/responses/ObservationStationCollection'
                default:
                    $ref: '#/components/responses/Error'
    /icons/{set}/{timeOfDay}/{first}:
        parameters:
            -
                name: set
                in: path
                required: true
                description: .
                schema:
                    type: string
            -
                name: timeOfDay
                in: path
                required: true
                description: .
                schema:
                    type: string
            -
                name: first
                in: path
                required: true
                description: .
                schema:
                    type: string
            -
                name: size
                in: query
                description: Font size
                schema:
                    anyOf:
                        -
                            type: string
                            enum:
                                - small
                                - medium
                                - large
                        -
                            type: integer
                            minimum: 10
                            maximum: 500
            -
                name: fontsize
                in: query
                description: Font size
                schema:
                    type: integer
                    minimum: 2
                    maximum: 24
        get:
            operationId: icons
            x-symfony:
                controller: App\Controller\IconController::iconAction
            description: Returns a forecast icon. Icon services in API are deprecated.
            deprecated: true
            responses:
                '200':
                    description: success
                    headers:
                        X-Correlation-Id:
                            $ref: '#/components/headers/CorrelationId'
                        X-Request-Id:
                            $ref: '#/components/headers/RequestId'
                        X-Server-Id:
                            $ref: '#/components/headers/ServerId'
                    content:
                        image/png:
                            schema:
                                $ref: '#/components/schemas/BinaryFile'
                default:
                    $ref: '#/components/responses/Error'
    /icons/{set}/{timeOfDay}/{first}/{second}:
        parameters:
            -
                name: set
                in: path
                required: true
                description: .
                schema:
                    type: string
            -
                name: timeOfDay
                in: path
                required: true
                description: .
                schema:
                    type: string
            -
                name: first
                in: path
                required: true
                description: .
                schema:
                    type: string
            -
                name: second
                in: path
                required: true
                description: .
                schema:
                    type: string
            -
                name: size
                in: query
                description: Font size
                schema:
                    anyOf:
                        -
                            type: string
                            enum:
                                - small
                                - medium
                                - large
                        -
                            type: integer
                            minimum: 10
                            maximum: 500
            -
                name: fontsize
                in: query
                description: Font size
                schema:
                    type: integer
                    minimum: 2
                    maximum: 24
        get:
            operationId: iconsDualCondition
            x-symfony:
                controller: App\Controller\IconController::iconAction
            description: Returns a forecast icon. Icon services in API are deprecated.
            deprecated: true
            responses:
                '200':
                    description: success
                    headers:
                        X-Correlation-Id:
                            $ref: '#/components/headers/CorrelationId'
                        X-Request-Id:
                            $ref: '#/components/headers/RequestId'
                        X-Server-Id:
                            $ref: '#/components/headers/ServerId'
                    content:
                        image/png:
                            schema:
                                $ref: '#/components/schemas/BinaryFile'
                default:
                    $ref: '#/components/responses/Error'
    /icons:
        get:
            operationId: icons_summary
            x-symfony:
                controller: App\Controller\IconController::indexAction
            description: Returns a list of icon codes and textual descriptions. Icon services in API are deprecated.
            deprecated: true
            responses:
                '200':
                    description: success
                    headers:
                        X-Correlation-Id:
                            $ref: '#/components/headers/CorrelationId'
                        X-Request-Id:
                            $ref: '#/components/headers/RequestId'
                        X-Server-Id:
                            $ref: '#/components/headers/ServerId'
                    content:
                        application/ld+json:
                            schema:
                                type: object
                                properties:
                                    '@context':
                                        $ref: '#/components/schemas/JsonLdContext'
                                    icons:
                                        type: object
                                        additionalProperties:
                                            type: object
                                            properties:
                                                description:
                                                    type: string
                                            required: [description]
                                            additionalProperties: false
                                required: [icons]
                                additionalProperties: false
                default:
                    $ref: '#/components/responses/Error'
    /thumbnails/satellite/{area}:
        parameters:
            -
                name: area
                in: path
                required: true
                description: .
                schema:
                    type: string
                    enum:
                        - a
                        - e
                        - g
                        - h
                        - p
                        - s
                        - w
        get:
            operationId: satellite_thumbnails
            x-symfony:
                controller: App\Controller\ImageController::thumbnailSatelliteAction
            description: Returns a thumbnail image for a satellite region. Image services in API are deprecated.
            deprecated: true
            responses:
                '200':
                    description: An image file
                    headers:
                        X-Correlation-Id:
                            $ref: '#/components/headers/CorrelationId'
                        X-Request-Id:
                            $ref: '#/components/headers/RequestId'
                        X-Server-Id:
                            $ref: '#/components/headers/ServerId'
                    content:
                        image/jpeg:
                            schema:
                                $ref: '#/components/schemas/BinaryFile'
                default:
                    $ref: '#/components/responses/Error'
    /stations/{stationId}/observations:
        parameters:
            - $ref: '#/components/parameters/ObservationStationId'
        get:
            operationId: station_observation_list
            x-symfony:
                controller: App\Controller\ObservationController::observationListAction
            description: Returns a list of observations for a given station
            parameters:
                - $ref: '#/components/parameters/QueryStartTime'
                - $ref: '#/components/parameters/QueryEndTime'
                -
                    name: limit
                    in: query
                    description: Limit
                    schema:
                        type: integer
                        minimum: 1
                        maximum: 500
            responses:
                '200':
                    $ref: '#/components/responses/ObservationCollection'
                default:
                    $ref: '#/components/responses/Error'
    /stations/{stationId}/observations/latest:
        parameters:
            - $ref: '#/components/parameters/ObservationStationId'
        get:
            operationId: station_observation_latest
            x-symfony:
                controller: App\Controller\ObservationController::stationLatestObservationAction
            description: Returns the latest observation for a station
            parameters:
                -
                    name: require_qc
                    in: query
                    description: Require QC
                    schema:
                        type: boolean
            responses:
                '200':
                    $ref: '#/components/responses/Observation'
                default:
                    $ref: '#/components/responses/Error'
    /stations/{stationId}/observations/{time}:
        parameters:
            - $ref: '#/components/parameters/ObservationStationId'
        get:
            operationId: station_observation_time
            x-symfony:
                controller: App\Controller\ObservationController::stationSingleObservationAction
            description: Returns a single observation.
            parameters:
                -
                    name: time
                    in: path
                    required: true
                    description: Timestamp of requested observation
                    schema:
                        type: string
                        format: date-time
            responses:
                '200':
                    $ref: '#/components/responses/Observation'
                default:
                    $ref: '#/components/responses/Error'
    /stations/{stationId}/tafs:
        get:
            operationId: tafs
            x-symfony:
                controller: App\Controller\AviationController::tafsAction
            description: Returns Terminal Aerodrome Forecasts for the specified airport station.
            parameters:
                - $ref: '#/components/parameters/ObservationStationId'
            responses:
                '200':
                    description: success
                    content:
                        application/ld+json:
                            schema: {}
                default:
                    $ref: '#/components/responses/Error'
    /stations/{stationId}/tafs/{date}/{time}:
        get:
            operationId: taf
            x-symfony:
                controller: App\Controller\AviationController::tafAction
            description: Returns a single Terminal Aerodrome Forecast.
            parameters:
                - $ref: '#/components/parameters/ObservationStationId'
                - $ref: '#/components/parameters/Date'
                - $ref: '#/components/parameters/Time'
            responses:
                '200':
                    description: success
                    content:
                        application/vnd.wmo.iwxxm+xml:
                            schema: {}
                default:
                    $ref: '#/components/responses/Error'
    /stations:
        get:
            operationId: obs_stations
            x-symfony:
                controller: App\Controller\ObservationStationController::stationsAction
            description: Returns a list of observation stations.
            parameters:
                -
                    name: id
                    in: query
                    description: Filter by observation station ID
                    schema:
                        type: array
                        items:
                            type: string
                    style: form
                    explode: false
                -
                    name: state
                    in: query
                    description: Filter by state/marine area code
                    schema:
                        type: array
                        items:
                            $ref: '#/components/schemas/AreaCode'
                    style: form
                    explode: false
                -
                    name: limit
                    in: query
                    description: Limit
                    schema:
                        type: integer
                        minimum: 1
                        maximum: 500
            responses:
                '200':
                    $ref: '#/components/responses/ObservationStationCollection'
                default:
                    $ref: '#/components/responses/Error'
    /stations/{stationId}:
        parameters:
            - $ref: '#/components/parameters/ObservationStationId'
        get:
            operationId: obs_station
            x-symfony:
                controller: App\Controller\ObservationStationController::stationAction
            description: Returns metadata about a given observation station
            responses:
                '200':
                    description: success
                    headers:
                        X-Correlation-Id:
                            $ref: '#/components/headers/CorrelationId'
                        X-Request-Id:
                            $ref: '#/components/headers/RequestId'
                        X-Server-Id:
                            $ref: '#/components/headers/ServerId'
                    content:
                        application/geo+json:
                            schema:
                                $ref: '#/components/schemas/ObservationStationGeoJson'
                        application/ld+json:
                            schema:
                                $ref: '#/components/schemas/ObservationStationJsonLd'
                default:
                    $ref: '#/components/responses/Error'
    /offices/{officeId}:
        parameters:
            - $ref: '#/components/parameters/NWSOfficeId'
        get:
            operationId: office
            x-symfony:
                controller: App\Controller\OfficeController::officeAction
            description: Returns metadata about a NWS forecast office
            responses:
                '200':
                    description: success
                    headers:
                        X-Correlation-Id:
                            $ref: '#/components/headers/CorrelationId'
                        X-Request-Id:
                            $ref: '#/components/headers/RequestId'
                        X-Server-Id:
                            $ref: '#/components/headers/ServerId'
                    content:
                        application/ld+json:
                            schema:
                                $ref: '#/components/schemas/Office'
                default:
                    $ref: '#/components/responses/Error'
    /offices/{officeId}/headlines/{headlineId}:
        parameters:
            - $ref: '#/components/parameters/NWSOfficeId'
            -
                name: headlineId
                in: path
                required: true
                description: Headline record ID
                schema:
                    type: string
        get:
            operationId: office_headline
            x-symfony:
                controller: App\Controller\OfficeController::officeHeadlineAction
            description: Returns a specific news headline for a given NWS office
            responses:
                '200':
                    description: success
                    headers:
                        X-Correlation-Id:
                            $ref: '#/components/headers/CorrelationId'
                        X-Request-Id:
                            $ref: '#/components/headers/RequestId'
                        X-Server-Id:
                            $ref: '#/components/headers/ServerId'
                    content:
                        application/ld+json:
                            schema:
                                $ref: '#/components/schemas/OfficeHeadline'
                default:
                    $ref: '#/components/responses/Error'
    /offices/{officeId}/headlines:
        parameters:
            - $ref: '#/components/parameters/NWSOfficeId'
        get:
            operationId: office_headlines
            x-symfony:
                controller: App\Controller\OfficeController::officeHeadlinesAction
            description: Returns a list of news headlines for a given NWS office
            responses:
                '200':
                    description: success
                    headers:
                        X-Correlation-Id:
                            $ref: '#/components/headers/CorrelationId'
                        X-Request-Id:
                            $ref: '#/components/headers/RequestId'
                        X-Server-Id:
                            $ref: '#/components/headers/ServerId'
                    content:
                        application/ld+json:
                            schema:
                                $ref: '#/components/schemas/OfficeHeadlineCollection'
                default:
                    $ref: '#/components/responses/Error'
    /offices/{officeId}/config:
        parameters:
            - $ref: '#/components/parameters/NWSOfficeId'
        get:
            operationId: office_config
            x-symfony:
                controller: App\Controller\OfficeController::configAction
                private: true
            description: Returns configuration data for an NWS office for use by other NWS web applications
            responses:
                '200':
                    description: success
                    headers:
                        X-Correlation-Id:
                            $ref: '#/components/headers/CorrelationId'
                        X-Request-Id:
                            $ref: '#/components/headers/RequestId'
                        X-Server-Id:
                            $ref: '#/components/headers/ServerId'
                    content:
                        application/ld+json:
                            schema:
                                type: object
                default:
                    $ref: '#/components/responses/Error'
    /points/{point}:
        parameters:
            - $ref: '#/components/parameters/PathPoint'
        get:
            operationId: point
            x-symfony:
                controller: App\Controller\PointController::pointAction
            description: Returns metadata about a given latitude/longitude point
            responses:
                '200':
                    description: success
                    headers:
                        X-Correlation-Id:
                            $ref: '#/components/headers/CorrelationId'
                        X-Request-Id:
                            $ref: '#/components/headers/RequestId'
                        X-Server-Id:
                            $ref: '#/components/headers/ServerId'
                    content:
                        application/geo+json:
                            schema:
                                $ref: '#/components/schemas/PointGeoJson'
                        application/ld+json:
                            schema:
                                $ref: '#/components/schemas/PointJsonLd'
                default:
                    $ref: '#/components/responses/Error'
    /points/{point}/stations:
        parameters:
            - $ref: '#/components/parameters/PathPoint'
        get:
            operationId: point_stations
            x-symfony:
                controller: App\Controller\PointController::pointStationsAction
            deprecated: true
            description: Returns a list of observation stations for a given point
            responses:
                '301':
                    description: redirect to gridpoint stations
                default:
                    $ref: '#/components/responses/Error'
    /radar/servers:
        get:
            operationId: radar_servers
            x-symfony:
                controller: App\Controller\RadarController::serversAction
            description: Returns a list of radar servers
            parameters:
                -
                    name: reportingHost
                    in: query
                    description: Show records from specific reporting host
                    schema:
                        type: string
            responses:
                '200':
                    description: success
                    headers:
                        X-Correlation-Id:
                            $ref: '#/components/headers/CorrelationId'
                        X-Request-Id:
                            $ref: '#/components/headers/RequestId'
                        X-Server-Id:
                            $ref: '#/components/headers/ServerId'
                    content:
                        application/ld+json:
                            schema: {}
                default:
                    $ref: '#/components/responses/Error'
    /radar/servers/{id}:
        parameters:
            -
                name: id
                in: path
                required: true
                description: Server ID
                schema:
                    type: string
        get:
            operationId: radar_server
            x-symfony:
                controller: App\Controller\RadarController::serverAction
            description: Returns metadata about a given radar server
            parameters:
                -
                    name: reportingHost
                    in: query
                    description: Show records from specific reporting host
                    schema:
                        type: string
            responses:
                '200':
                    description: success
                    headers:
                        X-Correlation-Id:
                            $ref: '#/components/headers/CorrelationId'
                        X-Request-Id:
                            $ref: '#/components/headers/RequestId'
                        X-Server-Id:
                            $ref: '#/components/headers/ServerId'
                    content:
                        application/ld+json:
                            schema: {}
                default:
                    $ref: '#/components/responses/Error'
    /radar/stations:
        get:
            operationId: radar_stations
            x-symfony:
                controller: App\Controller\RadarController::stationsAction
            description: Returns a list of radar stations
            parameters:
                -
                    name: stationType
                    in: query
                    description: Limit results to a specific station type or types
                    schema:
                        type: array
                        items:
                            type: string
                            pattern: '^[A-Za-z0-9-]+$'
                    style: form
                    explode: false
                -
                    name: reportingHost
                    in: query
                    description: Show RDA and latency info from specific reporting host
                    schema:
                        type: string
                -
                    name: host
                    in: query
                    description: Show latency info from specific LDM host
                    schema:
                        type: string
            responses:
                '200':
                    description: success
                    headers:
                        X-Correlation-Id:
                            $ref: '#/components/headers/CorrelationId'
                        X-Request-Id:
                            $ref: '#/components/headers/RequestId'
                        X-Server-Id:
                            $ref: '#/components/headers/ServerId'
                    content:
                        application/geo+json:
                            schema: {}
                        application/ld+json:
                            schema: {}
                default:
                    $ref: '#/components/responses/Error'
    /radar/stations/{stationId}:
        parameters:
            -
                name: stationId
                in: path
                required: true
                description: Radar station ID
                schema:
                    type: string
        get:
            operationId: radar_station
            x-symfony:
                controller: App\Controller\RadarController::stationAction
            description: Returns metadata about a given radar station
            parameters:
                -
                    name: reportingHost
                    in: query
                    description: Show RDA and latency info from specific reporting host
                    schema:
                        type: string
                -
                    name: host
                    in: query
                    description: Show latency info from specific LDM host
                    schema:
                        type: string
            responses:
                '200':
                    description: success
                    headers:
                        X-Correlation-Id:
                            $ref: '#/components/headers/CorrelationId'
                        X-Request-Id:
                            $ref: '#/components/headers/RequestId'
                        X-Server-Id:
                            $ref: '#/components/headers/ServerId'
                    content:
                        application/geo+json:
                            schema: {}
                        application/ld+json:
                            schema: {}
                default:
                    $ref: '#/components/responses/Error'
    /radar/stations/{stationId}/alarms:
        parameters:
            -
                name: stationId
                in: path
                required: true
                description: Radar station ID
                schema:
                    type: string
        get:
            operationId: radar_station_alarms
            x-symfony:
                controller: App\Controller\RadarController::stationAlarmsAction
            description: Returns metadata about a given radar station alarms
            responses:
                '200':
                    description: success
                    headers:
                        X-Correlation-Id:
                            $ref: '#/components/headers/CorrelationId'
                        X-Request-Id:
                            $ref: '#/components/headers/RequestId'
                        X-Server-Id:
                            $ref: '#/components/headers/ServerId'
                    content:
                        application/ld+json:
                            schema: {}
                default:
                    $ref: '#/components/responses/Error'
    /radar/queues/{host}:
        parameters:
            -
                name: host
                in: path
                required: true
                description: LDM host
                schema:
                    type: string
        get:
            operationId: radar_queue
            x-symfony:
                controller: App\Controller\RadarController::queueAction
            description: Returns metadata about a given radar queue
            parameters:
                -
                    name: limit
                    in: query
                    description: Record limit
                    schema:
                        type: integer
                        minimum: 1
                        maximum: 500
                -
                    name: arrived
                    in: query
                    description: Range for arrival time
                    schema:
                        $ref: '#/components/schemas/ISO8601Interval'
                -
                    name: created
                    in: query
                    description: Range for creation time
                    schema:
                        $ref: '#/components/schemas/ISO8601Interval'
                -
                    name: published
                    in: query
                    description: Range for publish time
                    schema:
                        $ref: '#/components/schemas/ISO8601Interval'
                -
                    name: station
                    in: query
                    description: Station identifier
                    schema:
                        type: string
                -
                    name: type
                    in: query
                    description: Record type
                    schema:
                        type: string
                -
                    name: feed
                    in: query
                    description: Originating product feed
                    schema:
                        type: string
                -
                    name: resolution
                    in: query
                    description: Resolution version
                    schema:
                        type: integer
                        minimum: 1
            responses:
                '200':
                    description: success
                    headers:
                        X-Correlation-Id:
                            $ref: '#/components/headers/CorrelationId'
                        X-Request-Id:
                            $ref: '#/components/headers/RequestId'
                        X-Server-Id:
                            $ref: '#/components/headers/ServerId'
                    content:
                        application/ld+json:
                            schema: {}
                default:
                    $ref: '#/components/responses/Error'
    /radar/profilers/{stationId}:
        parameters:
            -
                name: stationId
                in: path
                required: true
                description: Profiler station ID
                schema:
                    type: string
        get:
            operationId: radar_profiler
            x-symfony:
                controller: App\Controller\RadarController::profilerAction
            description: Returns metadata about a given radar wind profiler
            parameters:
                -
                    name: time
                    in: query
                    description: Time interval
                    schema:
                        $ref: '#/components/schemas/ISO8601Interval'
                -
                    name: interval
                    in: query
                    description: Averaging interval
                    schema:
                        $ref: '#/components/schemas/ISO8601Duration'
            responses:
                '200':
                    description: success
                    headers:
                        X-Correlation-Id:
                            $ref: '#/components/headers/CorrelationId'
                        X-Request-Id:
                            $ref: '#/components/headers/RequestId'
                        X-Server-Id:
                            $ref: '#/components/headers/ServerId'
                    content:
                        application/ld+json:
                            schema: {}
                default:
                    $ref: '#/components/responses/Error'
    /products:
        get:
            operationId: products_query
            x-symfony:
                controller: App\Controller\TextProductController::productListAction
            description: Returns a list of text products
            parameters:
                -
                    name: location
                    in: query
                    description: Location id
                    schema:
                        type: array
                        items:
                            type: string
                    style: form
                    explode: false
                -
                    name: start
                    in: query
                    description: Start time
                    schema:
                        type: string
                        format: date-time
                -
                    name: end
                    in: query
                    description: End time
                    schema:
                        type: string
                        format: date-time
                -
                    name: office
                    in: query
                    description: Issuing office
                    schema:
                        type: array
                        items:
                            type: string
                            pattern: '^[A-Z]{4}$'
                    style: form
                    explode: false
                -
                    name: wmoid
                    in: query
                    description: WMO id code
                    schema:
                        type: array
                        items:
                            type: string
                            pattern: '^[A-Z]{4}\d{2}$'
                    style: form
                    explode: false
                -
                    name: type
                    in: query
                    description: Product code
                    schema:
                        type: array
                        items:
                            type: string
                            pattern: '^\w{3}$'
                    style: form
                    explode: false
                -
                    name: limit
                    in: query
                    description: Limit
                    schema:
                        type: integer
                        minimum: 1
                        maximum: 500
            responses:
                '200':
                    description: success
                    headers:
                        X-Correlation-Id:
                            $ref: '#/components/headers/CorrelationId'
                        X-Request-Id:
                            $ref: '#/components/headers/RequestId'
                        X-Server-Id:
                            $ref: '#/components/headers/ServerId'
                    content:
                        application/ld+json:
                            schema:
                                $ref: '#/components/schemas/TextProductCollection'
                default:
                    $ref: '#/components/responses/Error'
    /products/locations:
        get:
            operationId: product_locations
            x-symfony:
                controller: App\Controller\TextProductController::productLocationsAction
            description: Returns a list of valid text product issuance locations
            responses:
                '200':
                    description: success
                    headers:
                        X-Correlation-Id:
                            $ref: '#/components/headers/CorrelationId'
                        X-Request-Id:
                            $ref: '#/components/headers/RequestId'
                        X-Server-Id:
                            $ref: '#/components/headers/ServerId'
                    content:
                        application/ld+json:
                            schema:
                                $ref: '#/components/schemas/TextProductLocationCollection'
                default:
                    $ref: '#/components/responses/Error'
    /products/types:
        get:
            operationId: product_types
            x-symfony:
                controller: App\Controller\TextProductController::productTypesAction
            description: Returns a list of valid text product types and codes
            responses:
                '200':
                    description: success
                    headers:
                        X-Correlation-Id:
                            $ref: '#/components/headers/CorrelationId'
                        X-Request-Id:
                            $ref: '#/components/headers/RequestId'
                        X-Server-Id:
                            $ref: '#/components/headers/ServerId'
                    content:
                        application/ld+json:
                            schema:
                                $ref: '#/components/schemas/TextProductTypeCollection'
                default:
                    $ref: '#/components/responses/Error'
    /products/{productId}:
        parameters:
            -
                name: productId
                in: path
                required: true
                description: .
                schema:
                    type: string
        get:
            operationId: product
            x-symfony:
                controller: App\Controller\TextProductController::productAction
            description: Returns a specific text product
            responses:
                '200':
                    description: success
                    headers:
                        X-Correlation-Id:
                            $ref: '#/components/headers/CorrelationId'
                        X-Request-Id:
                            $ref: '#/components/headers/RequestId'
                        X-Server-Id:
                            $ref: '#/components/headers/ServerId'
                    content:
                        application/ld+json:
                            schema:
                                $ref: '#/components/schemas/TextProduct'
                default:
                    $ref: '#/components/responses/Error'
    /products/types/{typeId}:
        parameters:
            -
                name: typeId
                in: path
                required: true
                description: .
                schema:
                    type: string
        get:
            operationId: products_type
            x-symfony:
                controller: App\Controller\TextProductController::productsByTypeAction
            description: Returns a list of text products of a given type
            responses:
                '200':
                    description: success
                    headers:
                        X-Correlation-Id:
                            $ref: '#/components/headers/CorrelationId'
                        X-Request-Id:
                            $ref: '#/components/headers/RequestId'
                        X-Server-Id:
                            $ref: '#/components/headers/ServerId'
                    content:
                        application/ld+json:
                            schema:
                                $ref: '#/components/schemas/TextProductCollection'
                default:
                    $ref: '#/components/responses/Error'
    /products/types/{typeId}/locations:
        parameters:
            -
                name: typeId
                in: path
                required: true
                description: .
                schema:
                    type: string
        get:
            operationId: products_type_locations
            x-symfony:
                controller: App\Controller\TextProductController::locationsWithProductTypeAction
            description: >-
                Returns a list of valid text product issuance locations for a given
                product type
            responses:
                '200':
                    description: success
                    headers:
                        X-Correlation-Id:
                            $ref: '#/components/headers/CorrelationId'
                        X-Request-Id:
                            $ref: '#/components/headers/RequestId'
                        X-Server-Id:
                            $ref: '#/components/headers/ServerId'
                    content:
                        application/ld+json:
                            schema:
                                $ref: '#/components/schemas/TextProductLocationCollection'
                default:
                    $ref: '#/components/responses/Error'
    /products/locations/{locationId}/types:
        parameters:
            -
                name: locationId
                in: path
                required: true
                description: .
                schema:
                    type: string
        get:
            operationId: location_products
            x-symfony:
                controller: App\Controller\TextProductController::locationProductsAction
            description: Returns a list of valid text product types for a given issuance location
            responses:
                '200':
                    description: success
                    headers:
                        X-Correlation-Id:
                            $ref: '#/components/headers/CorrelationId'
                        X-Request-Id:
                            $ref: '#/components/headers/RequestId'
                        X-Server-Id:
                            $ref: '#/components/headers/ServerId'
                    content:
                        application/ld+json:
                            schema:
                                $ref: '#/components/schemas/TextProductTypeCollection'
                default:
                    $ref: '#/components/responses/Error'
    /products/types/{typeId}/locations/{locationId}:
        parameters:
            -
                name: typeId
                in: path
                required: true
                description: .
                schema:
                    type: string
            -
                name: locationId
                in: path
                required: true
                description: .
                schema:
                    type: string
        get:
            operationId: products_type_location
            x-symfony:
                controller: App\Controller\TextProductController::productsByTypeAndLocationAction
            description: >-
                Returns a list of text products of a given type for a given issuance
                location
            responses:
                '200':
                    description: success
                    headers:
                        X-Correlation-Id:
                            $ref: '#/components/headers/CorrelationId'
                        X-Request-Id:
                            $ref: '#/components/headers/RequestId'
                        X-Server-Id:
                            $ref: '#/components/headers/ServerId'
                    content:
                        application/ld+json:
                            schema:
                                $ref: '#/components/schemas/TextProductCollection'
                default:
                    $ref: '#/components/responses/Error'
    /zones:
        get:
            operationId: zone_list
            x-symfony:
                controller: App\Controller\ZoneController::zoneListAction
            description: Returns a list of zones
            parameters:
                -
                    name: id
                    in: query
                    description: Zone ID (forecast or county)
                    schema:
                        type: array
                        items:
                            $ref: '#/components/schemas/NWSZoneID'
                    style: form
                    explode: false
                -
                    name: area
                    in: query
                    description: State/marine area code
                    schema:
                        type: array
                        items:
                            $ref: '#/components/schemas/AreaCode'
                    style: form
                    explode: false
                -
                    name: region
                    in: query
                    description: Region code
                    schema:
                        type: array
                        items:
                            $ref: '#/components/schemas/RegionCode'
                    style: form
                    explode: false
                -
                    name: type
                    in: query
                    description: Zone type
                    schema:
                        type: array
                        items:
                            $ref: '#/components/schemas/NWSZoneType'
                    style: form
                    explode: false
                -
                    name: point
                    in: query
                    description: Point (latitude,longitude)
                    schema:
                        $ref: '#/components/schemas/PointString'
                -
                    name: include_geometry
                    in: query
                    description: Include geometry in results (true/false)
                    schema:
                        type: boolean
                -
                    name: limit
                    in: query
                    description: Limit
                    schema:
                        type: integer
                        minimum: 1
                -
                    name: effective
                    in: query
                    description: Effective date/time
                    schema:
                        type: string
                        format: date-time
            responses:
                '200':
                    description: success
                    headers:
                        X-Correlation-Id:
                            $ref: '#/components/headers/CorrelationId'
                        X-Request-Id:
                            $ref: '#/components/headers/RequestId'
                        X-Server-Id:
                            $ref: '#/components/headers/ServerId'
                    content:
                        application/geo+json:
                            schema:
                                $ref: '#/components/schemas/ZoneCollectionGeoJson'
                        application/ld+json:
                            schema:
                                $ref: '#/components/schemas/ZoneCollectionJsonLd'
                default:
                    $ref: '#/components/responses/Error'
    /zones/{type}:
        parameters:
            -
                name: type
                in: path
                required: true
                description: Zone type
                schema:
                    $ref: '#/components/schemas/NWSZoneType'
        get:
            operationId: zone_list_type
            x-symfony:
                controller: App\Controller\ZoneController::zoneListAction
            description: Returns a list of zones of a given type
            parameters:
                -
                    name: id
                    in: query
                    description: Zone ID (forecast or county)
                    schema:
                        type: array
                        items:
                            $ref: '#/components/schemas/NWSZoneID'
                    style: form
                    explode: false
                -
                    name: area
                    in: query
                    description: State/marine area code
                    schema:
                        type: array
                        items:
                            $ref: '#/components/schemas/AreaCode'
                    style: form
                    explode: false
                -
                    name: region
                    in: query
                    description: Region code
                    schema:
                        type: array
                        items:
                            $ref: '#/components/schemas/RegionCode'
                    style: form
                    explode: false
                -
                    name: type
                    in: query
                    description: Zone type
                    schema:
                        type: array
                        items:
                            $ref: '#/components/schemas/NWSZoneType'
                    style: form
                    explode: false
                -
                    name: point
                    in: query
                    description: Point (latitude,longitude)
                    schema:
                        $ref: '#/components/schemas/PointString'
                -
                    name: include_geometry
                    in: query
                    description: Include geometry in results (true/false)
                    schema:
                        type: boolean
                -
                    name: limit
                    in: query
                    description: Limit
                    schema:
                        type: integer
                        minimum: 1
                -
                    name: effective
                    in: query
                    description: Effective date/time
                    schema:
                        type: string
                        format: date-time
            responses:
                '200':
                    description: success
                    headers:
                        X-Correlation-Id:
                            $ref: '#/components/headers/CorrelationId'
                        X-Request-Id:
                            $ref: '#/components/headers/RequestId'
                        X-Server-Id:
                            $ref: '#/components/headers/ServerId'
                    content:
                        application/geo+json:
                            schema:
                                $ref: '#/components/schemas/ZoneCollectionGeoJson'
                        application/ld+json:
                            schema:
                                $ref: '#/components/schemas/ZoneCollectionJsonLd'
                default:
                    $ref: '#/components/responses/Error'
    /zones/{type}/{zoneId}:
        parameters:
            -
                name: type
                in: path
                required: true
                description: Zone type
                schema:
                    $ref: '#/components/schemas/NWSZoneType'
            - $ref: '#/components/parameters/NWSZoneId'
        get:
            operationId: zone
            x-symfony:
                controller: App\Controller\ZoneController::zoneAction
            description: Returns metadata about a given zone
            parameters:
                -
                    name: effective
                    in: query
                    description: Effective date/time
                    schema:
                        type: string
                        format: date-time
            responses:
                '200':
                    description: success
                    headers:
                        X-Correlation-Id:
                            $ref: '#/components/headers/CorrelationId'
                        X-Request-Id:
                            $ref: '#/components/headers/RequestId'
                        X-Server-Id:
                            $ref: '#/components/headers/ServerId'
                    content:
                        application/geo+json:
                            schema:
                                $ref: '#/components/schemas/ZoneGeoJson'
                        application/ld+json:
                            schema:
                                $ref: '#/components/schemas/ZoneJsonLd'
                default:
                    $ref: '#/components/responses/Error'
    /zones/{type}/{zoneId}/forecast:
        parameters:
            -
                name: type
                in: path
                required: true
                description: Zone type
                schema:
                    type: string
            - $ref: '#/components/parameters/NWSZoneId'
        get:
            operationId: zone_forecast
            x-symfony:
                controller: App\Controller\ZoneController::zoneForecastAction
            description: Returns the current zone forecast for a given zone
            responses:
                '200':
                    description: success
                    headers:
                        X-Correlation-Id:
                            $ref: '#/components/headers/CorrelationId'
                        X-Request-Id:
                            $ref: '#/components/headers/RequestId'
                        X-Server-Id:
                            $ref: '#/components/headers/ServerId'
                    content:
                        application/geo+json:
                            schema:
                                $ref: '#/components/schemas/ZoneForecastGeoJson'
                        application/ld+json:
                            schema:
                                $ref: '#/components/schemas/ZoneForecastJsonLd'
                default:
                    $ref: '#/components/responses/Error'
    /zones/forecast/{zoneId}/observations:
        parameters:
            - $ref: '#/components/parameters/NWSZoneId'
        get:
            operationId: zone_obs
            x-symfony:
                controller: App\Controller\ZoneController::zoneObservationsAction
            description: Returns a list of observations for a given zone
            parameters:
                -
                    name: start
                    in: query
                    description: Start date/time
                    schema:
                        type: string
                        format: date-time
                -
                    name: end
                    in: query
                    description: End date/time
                    schema:
                        type: string
                        format: date-time
                -
                    name: limit
                    in: query
                    description: Limit
                    schema:
                        type: integer
                        minimum: 1
                        maximum: 500
            responses:
                '200':
                    description: success
                    headers:
                        X-Correlation-Id:
                            $ref: '#/components/headers/CorrelationId'
                        X-Request-Id:
                            $ref: '#/components/headers/RequestId'
                        X-Server-Id:
                            $ref: '#/components/headers/ServerId'
                    content:
                        application/geo+json:
                            schema:
                                $ref: '#/components/schemas/ObservationCollectionGeoJson'
                        application/ld+json:
                            schema:
                                $ref: '#/components/schemas/ObservationCollectionJsonLd'
                default:
                    $ref: '#/components/responses/Error'
    /zones/forecast/{zoneId}/stations:
        parameters:
            - $ref: '#/components/parameters/NWSZoneId'
        get:
            operationId: zone_stations
            x-symfony:
                controller: App\Controller\ZoneController::zoneStationsAction
            description: Returns a list of observation stations for a given zone
            responses:
                '200':
                    $ref: '#/components/responses/ObservationStationCollection'
                default:
                    $ref: '#/components/responses/Error'
components:
    schemas:
        Alert:
            description: >
                An object representing a public alert message.

                Unless otherwise noted, the fields in this object correspond to the National Weather Service CAP v1.2
                specification, which extends the OASIS Common Alerting Protocol (CAP) v1.2 specification and USA
                Integrated Public Alert and Warning System (IPAWS) Profile v1.0. Refer to this documentation for more
                complete information.

                http://docs.oasis-open.org/emergency/cap/v1.2/CAP-v1.2-os.html
                http://docs.oasis-open.org/emergency/cap/v1.2/ipaws-profile/v1.0/cs01/cap-v1.2-ipaws-profile-cs01.html
                https://alerts.weather.gov/#technical-notes-v12
            type: object
            properties:
                id:
                    $ref: '#/components/schemas/AlertId'
                areaDesc:
                    description: A textual description of the area affected by the alert.
                    type: string
                geocode:
                    description: Lists of codes for NWS public zones and counties affected by the alert.
                    type: object
                    properties:
                        UGC:
                            description: A list of NWS public zone or county identifiers.
                            type: array
                            items:
                                $ref: '#/components/schemas/NWSZoneID'
                        SAME:
                            description: A list of SAME (Specific Area Message Encoding) codes for affected counties.
                            type: array
                            items:
                                type: string
                                pattern: ^\d{6}$
                affectedZones:
                    description: >
                        An array of API links for zones affected by the alert. This is an API-specific extension field
                        and is not part of the CAP specification.
                    type: array
                    items:
                        type: string
                        format: uri
                references:
                    description: A list of prior alerts that this alert updates or replaces.
                    type: array
                    items:
                        type: object
                        properties:
                            '@id':
                                description: An API link to the prior alert.
                                type: string
                                format: uri
                            identifier:
                                $ref: '#/components/schemas/AlertId'
                            sender:
                                description: The sender of the prior alert.
                                type: string
                            sent:
                                description: The time the prior alert was sent.
                                type: string
                                format: date-time
                sent:
                    description: The time of the origination of the alert message.
                    type: string
                    format: date-time
                effective:
                    description: The effective time of the information of the alert message.
                    type: string
                    format: date-time
                onset:
                    description: The expected time of the beginning of the subject event of the alert message.
                    type: string
                    format: date-time
                    nullable: true
                expires:
                    description: The expiry time of the information of the alert message.
                    type: string
                    format: date-time
                ends:
                    description: The expected end time of the subject event of the alert message.
                    type: string
                    format: date-time
                    nullable: true
                status:
                    $ref: '#/components/schemas/AlertStatus'
                messageType:
                    $ref: '#/components/schemas/AlertMessageType'
                category:
                    description: The code denoting the category of the subject event of the alert message.
                    type: string
                    enum:
                        - Met
                        - Geo
                        - Safety
                        - Security
                        - Rescue
                        - Fire
                        - Health
                        - Env
                        - Transport
                        - Infra
                        - CBRNE
                        - Other
                severity:
                    $ref: '#/components/schemas/AlertSeverity'
                certainty:
                    $ref: '#/components/schemas/AlertCertainty'
                urgency:
                    $ref: '#/components/schemas/AlertUrgency'
                event:
                    description: The text denoting the type of the subject event of the alert message.
                    type: string
                sender:
                    description: Email address of the NWS webmaster.
                    type: string
                senderName:
                    description: The text naming the originator of the alert message.
                    type: string
                headline:
                    description: The text headline of the alert message.
                    type: string
                    nullable: true
                description:
                    description: The text describing the subject event of the alert message.
                    type: string
                instruction:
                    description: >
                        The text describing the recommended action to be taken by recipients of the alert message.
                    type: string
                    nullable: true
                response:
                    description: >
                        The code denoting the type of action recommended for the target audience.

                        This corresponds to responseType in the CAP specification.
                    type: string
                    enum:
                        - Shelter
                        - Evacuate
                        - Prepare
                        - Execute
                        - Avoid
                        - Monitor
                        - Assess
                        - AllClear
                        - None
                parameters:
                    description: >
                        System-specific additional parameters associated with the alert message.

                        The keys in this object correspond to parameter definitions in the NWS CAP specification.
                    type: object
                    additionalProperties:
                        type: array
                        items: {}
        AlertCollection:
            type: object
            properties:
                title:
                    description: A title describing the alert collection
                    type: string
                updated:
                    description: The last time a change occurred to this collection
                    type: string
                    format: date-time
                pagination:
                    description: Links for retrieving more data
                    type: object
                    properties:
                        next:
                            description: A link to the next set of alerts
                            type: string
                            format: uri
                    required: [next]
                    additionalProperties: false
        AlertCollectionGeoJson:
            allOf:
                - $ref: '#/components/schemas/GeoJsonFeatureCollection'
                -
                    type: object
                    properties:
                        features:
                            type: array
                            items:
                                type: object
                                properties:
                                    properties:
                                        $ref: '#/components/schemas/Alert'
                - $ref: '#/components/schemas/AlertCollection'
        AlertCollectionJsonLd:
            allOf:
                - $ref: '#/components/schemas/AlertCollection'
                -
                    type: object
                    properties:
                        '@context':
                            $ref: '#/components/schemas/JsonLdContext'
                        '@graph':
                            type: array
                            items:
                                $ref: '#/components/schemas/Alert'
        AlertCap:
            type: object
        AlertGeoJson:
            allOf:
                - $ref: '#/components/schemas/GeoJsonFeature'
                -
                    type: object
                    properties:
                        properties:
                            $ref: '#/components/schemas/Alert'
        AlertJsonLd:
            type: object
            properties:
                '@graph':
                    type: array
                    items:
                        $ref: '#/components/schemas/Alert'
        AlertId:
            description: The identifier of the alert message.
            type: string
        AlertCertainty:
            type: string
            enum:
                - Observed
                - Likely
                - Possible
                - Unlikely
                - Unknown
        AlertMessageType:
            type: string
            enum:
                - Alert
                - Update
                - Cancel
                - Ack
                - Error
        AlertSeverity:
            type: string
            enum:
                - Extreme
                - Severe
                - Moderate
                - Minor
                - Unknown
        AlertStatus:
            type: string
            enum:
                - Actual
                - Exercise
                - System
                - Test
                - Draft
        AlertUrgency:
            type: string
            enum:
                - Immediate
                - Expected
                - Future
                - Past
                - Unknown
        AlertAtomEntry:
            description: An alert entry in an Atom feed
            type: object
            xml:
                name: entry
                namespace: http://www.w3.org/2005/Atom
            properties:
                id:
                    type: string
                    xml:
                        namespace: http://www.w3.org/2005/Atom
                updated:
                    type: string
                    xml:
                        namespace: http://www.w3.org/2005/Atom
                published:
                    type: string
                    xml:
                        namespace: http://www.w3.org/2005/Atom
                author:
                    type: object
                    xml:
                        namespace: http://www.w3.org/2005/Atom
                    properties:
                        name:
                            type: string
                summary:
                    type: string
                    xml:
                        namespace: http://www.w3.org/2005/Atom
                event:
                    type: string
                    xml:
                        namespace: urn:oasis:names:tc:emergency:cap:1.2
                sent:
                    type: string
                    xml:
                        namespace: urn:oasis:names:tc:emergency:cap:1.2
                effective:
                    type: string
                    xml:
                        namespace: urn:oasis:names:tc:emergency:cap:1.2
                expires:
                    type: string
                    xml:
                        namespace: urn:oasis:names:tc:emergency:cap:1.2
                status:
                    type: string
                    xml:
                        namespace: urn:oasis:names:tc:emergency:cap:1.2
                msgType:
                    type: string
                    xml:
                        namespace: urn:oasis:names:tc:emergency:cap:1.2
                category:
                    type: string
                    xml:
                        namespace: urn:oasis:names:tc:emergency:cap:1.2
                urgency:
                    type: string
                    xml:
                        namespace: urn:oasis:names:tc:emergency:cap:1.2
                severity:
                    type: string
                    xml:
                        namespace: urn:oasis:names:tc:emergency:cap:1.2
                certainty:
                    type: string
                    xml:
                        namespace: urn:oasis:names:tc:emergency:cap:1.2
                areaDesc:
                    type: string
                    xml:
                        namespace: urn:oasis:names:tc:emergency:cap:1.2
                polygon:
                    type: string
                    xml:
                        namespace: urn:oasis:names:tc:emergency:cap:1.2
                geocode:
                    type: array
                    xml:
                        namespace: urn:oasis:names:tc:emergency:cap:1.2
                    items:
                        $ref: '#/components/schemas/AlertXMLParameter'
                parameter:
                    type: array
                    xml:
                        namespace: urn:oasis:names:tc:emergency:cap:1.2
                    items:
                        $ref: '#/components/schemas/AlertXMLParameter'
        AlertXMLParameter:
            type: object
            properties:
                valueName:
                    type: string
                value:
                    type: string
        AlertAtomFeed:
            description: An alert feed in Atom format
            type: object
            xml:
                name: feed
                namespace: http://www.w3.org/2005/Atom
            properties:
                id:
                    type: string
                    xml:
                        namespace: http://www.w3.org/2005/Atom
                generator:
                    type: string
                    xml:
                        namespace: http://www.w3.org/2005/Atom
                updated:
                    type: string
                    xml:
                        namespace: http://www.w3.org/2005/Atom
                author:
                    type: object
                    xml:
                        namespace: http://www.w3.org/2005/Atom
                    properties:
                        name:
                            type: string
                            xml:
                                namespace: http://www.w3.org/2005/Atom
                title:
                    type: string
                    xml:
                        namespace: http://www.w3.org/2005/Atom
                entry:
                    type: array
                    xml:
                        namespace: http://www.w3.org/2005/Atom
                    items:
                        $ref: '#/components/schemas/AlertAtomEntry'
        AreaCode:
            description: State/territory codes and marine area codes
            oneOf:
                - $ref: '#/components/schemas/StateTerritoryCode'
                - $ref: '#/components/schemas/MarineAreaCode'
        BinaryFile:
            type: string
            format: binary
        CenterWeatherAdvisoryCollectionGeoJson:
            allOf:
                - $ref: '#/components/schemas/GeoJsonFeatureCollection'
                -
                    type: object
                    properties:
                        features:
                            type: array
                            items:
                                type: object
                                properties:
                                    properties:
                                        $ref: '#/components/schemas/CenterWeatherAdvisory'
        CenterWeatherAdvisoryGeoJson:
            allOf:
                - $ref: '#/components/schemas/GeoJsonFeature'
                -
                    type: object
                    properties:
                        properties:
                            $ref: '#/components/schemas/CenterWeatherAdvisory'
        CenterWeatherAdvisory:
            type: object
            properties:
                id:
                    type: string
                issueTime:
                    type: string
                    format: date-time
                cwsu:
                    $ref: '#/components/schemas/NWSCenterWeatherServiceUnitId'
                sequence:
                    type: integer
                    minimum: 101
                start:
                    type: string
                    format: date-time
                end:
                    type: string
                    format: date-time
                observedProperty:
                    type: string
                text:
                    type: string
            additionalProperties: false
        CenterWeatherServiceUnitJsonLd:
            $ref: '#/components/schemas/Office'
        Date:
            description: Date (in YYYY-MM-DD format).
            type: string
            format: date
        FIRIdentifier:
            description: FIR Identifier
            type: string
            pattern: '^[A-Z]{4}$'
        GeometryString:
            description: A geometry represented in Well-Known Text (WKT) format.
            type: string
            format: wkt
            nullable: true
        GeoJsonBoundingBox:
            description: A GeoJSON bounding box. Please refer to IETF RFC 7946 for information on the GeoJSON format.
            type: array
            minItems: 4
            items:
                type: number
        GeoJsonCoordinate:
            description: A GeoJSON coordinate. Please refer to IETF RFC 7946 for information on the GeoJSON format.
            type: array
            minItems: 2
            items:
                type: number
        GeoJsonGeometry:
            description: A GeoJSON geometry object. Please refer to IETF RFC 7946 for information on the GeoJSON format.
            nullable: true
            oneOf:
                -
                    title: GeoJSON Point
                    type: object
                    required: [type, coordinates]
                    properties:
                        type:
                            type: string
                            enum: [Point]
                        coordinates:
                            $ref: '#/components/schemas/GeoJsonCoordinate'
                        bbox:
                            $ref: '#/components/schemas/GeoJsonBoundingBox'
                -
                    title: GeoJSON LineString
                    type: object
                    required: [type, coordinates]
                    properties:
                        type:
                            type: string
                            enum: [LineString]
                        coordinates:
                            $ref: '#/components/schemas/GeoJsonLineString'
                        bbox:
                            $ref: '#/components/schemas/GeoJsonBoundingBox'
                -
                    title: GeoJSON Polygon
                    type: object
                    required: [type, coordinates]
                    properties:
                        type:
                            type: string
                            enum: [Polygon]
                        coordinates:
                            $ref: '#/components/schemas/GeoJsonPolygon'
                        bbox:
                            $ref: '#/components/schemas/GeoJsonBoundingBox'
                -
                    title: GeoJSON MultiPoint
                    type: object
                    required: [type, coordinates]
                    properties:
                        type:
                            type: string
                            enum: [MultiPoint]
                        coordinates:
                            type: array
                            items:
                                $ref: '#/components/schemas/GeoJsonCoordinate'
                        bbox:
                            $ref: '#/components/schemas/GeoJsonBoundingBox'
                -
                    title: GeoJSON MultiLineString
                    type: object
                    required: [type, coordinates]
                    properties:
                        type:
                            type: string
                            enum: [MultiLineString]
                        coordinates:
                            type: array
                            items:
                                $ref: '#/components/schemas/GeoJsonLineString'
                        bbox:
                            $ref: '#/components/schemas/GeoJsonBoundingBox'
                -
                    title: GeoJSON MultiPolygon
                    type: object
                    required: [type, coordinates]
                    properties:
                        type:
                            type: string
                            enum: [MultiPolygon]
                        coordinates:
                            type: array
                            items:
                                $ref: '#/components/schemas/GeoJsonPolygon'
                        bbox:
                            $ref: '#/components/schemas/GeoJsonBoundingBox'
        GeoJsonFeature:
            description: A GeoJSON feature. Please refer to IETF RFC 7946 for information on the GeoJSON format.
            type: object
            properties:
                '@context':
                    $ref: '#/components/schemas/JsonLdContext'
                'id':
                    type: string
                    format: uri
                type:
                    type: string
                    enum: [Feature]
                geometry:
                    $ref: '#/components/schemas/GeoJsonGeometry'
                properties:
                    type: object
            required: [type, geometry, properties]
            additionalProperties: false
        GeoJsonFeatureCollection:
            description: A GeoJSON feature collection. Please refer to IETF RFC 7946 for information on the GeoJSON format.
            type: object
            properties:
                '@context':
                    $ref: '#/components/schemas/JsonLdContext'
                type:
                    type: string
                    enum: [FeatureCollection]
                features:
                    type: array
                    items:
                        $ref: '#/components/schemas/GeoJsonFeature'
            required: [type, features]
        GeoJsonLineString:
            description: A GeoJSON line string. Please refer to IETF RFC 7946 for information on the GeoJSON format.
            type: array
            minItems: 2
            items:
                $ref: '#/components/schemas/GeoJsonCoordinate'
        GeoJsonPolygon:
            description: A GeoJSON polygon. Please refer to IETF RFC 7946 for information on the GeoJSON format.
            type: array
            items:
                type: array
                minItems: 4
                items:
                    $ref: '#/components/schemas/GeoJsonCoordinate'
        Gridpoint:
            description: >
                Raw forecast data for a 2.5km grid square.

                This is a list of all potential data layers that may appear. Some layers may not be present in all
                areas.

                * temperature

                * dewpoint

                * maxTemperature

                * minTemperature

                * relativeHumidity

                * apparentTemperature

                * heatIndex

                * windChill

                * skyCover

                * windDirection

                * windSpeed

                * windGust

                * weather

                * hazards: Watch and advisory products in effect

                * probabilityOfPrecipitation

                * quantitativePrecipitation

                * iceAccumulation

                * snowfallAmount

                * snowLevel

                * ceilingHeight

                * visibility

                * transportWindSpeed

                * transportWindDirection

                * mixingHeight

                * hainesIndex

                * lightningActivityLevel

                * twentyFootWindSpeed

                * twentyFootWindDirection

                * waveHeight

                * wavePeriod

                * waveDirection

                * primarySwellHeight

                * primarySwellDirection

                * secondarySwellHeight

                * secondarySwellDirection

                * wavePeriod2

                * windWaveHeight

                * dispersionIndex

                * pressure: Barometric pressure

                * probabilityOfTropicalStormWinds

                * probabilityOfHurricaneWinds

                * potentialOf15mphWinds

                * potentialOf25mphWinds

                * potentialOf35mphWinds

                * potentialOf45mphWinds

                * potentialOf20mphWindGusts

                * potentialOf30mphWindGusts

                * potentialOf40mphWindGusts

                * potentialOf50mphWindGusts

                * potentialOf60mphWindGusts

                * grasslandFireDangerIndex

                * probabilityOfThunder

                * davisStabilityIndex

                * atmosphericDispersionIndex

                * lowVisibilityOccurrenceRiskIndex

                * stability

                * redFlagThreatIndex
            type: object
            properties:
                '@context':
                    $ref: '#/components/schemas/JsonLdContext'
                geometry:
                    $ref: '#/components/schemas/GeometryString'
                '@id':
                    type: string
                    format: uri
                '@type':
                    type: string
                    enum: ['wx:Gridpoint']
                updateTime:
                    type: string
                    format: date-time
                validTimes:
                    $ref: '#/components/schemas/ISO8601Interval'
                elevation:
                    $ref: '#/components/schemas/QuantitativeValue'
                forecastOffice:
                    type: string
                    format: uri
                gridId:
                    type: string
                gridX:
                    type: integer
                    minimum: 0
                gridY:
                    type: integer
                    minimum: 0
                weather:
                    type: object
                    properties:
                        values:
                            type: array
                            items:
                                type: object
                                properties:
                                    validTime:
                                        $ref: '#/components/schemas/ISO8601Interval'
                                    value:
                                        type: array
                                        items:
                                            description: A value object representing expected weather phenomena.
                                            type: object
                                            properties:
                                                coverage:
                                                    type: string
                                                    enum:
                                                        - areas
                                                        - brief
                                                        - chance
                                                        - definite
                                                        - few
                                                        - frequent
                                                        - intermittent
                                                        - isolated
                                                        - likely
                                                        - numerous
                                                        - occasional
                                                        - patchy
                                                        - periods
                                                        - scattered
                                                        - slight_chance
                                                        - widespread
                                                    nullable: true
                                                weather:
                                                    type: string
                                                    enum:
                                                        - blowing_dust
                                                        - blowing_sand
                                                        - blowing_snow
                                                        - drizzle
                                                        - fog
                                                        - freezing_fog
                                                        - freezing_drizzle
                                                        - freezing_rain
                                                        - freezing_spray
                                                        - frost
                                                        - hail
                                                        - haze
                                                        - ice_crystals
                                                        - ice_fog
                                                        - rain
                                                        - rain_showers
                                                        - sleet
                                                        - smoke
                                                        - snow
                                                        - snow_showers
                                                        - thunderstorms
                                                        - volcanic_ash
                                                        - water_spouts
                                                    nullable: true
                                                intensity:
                                                    type: string
                                                    enum:
                                                        - very_light
                                                        - light
                                                        - moderate
                                                        - heavy
                                                    nullable: true
                                                visibility:
                                                    $ref: '#/components/schemas/QuantitativeValue'
                                                attributes:
                                                    type: array
                                                    items:
                                                        type: string
                                                        enum:
                                                            - damaging_wind
                                                            - dry_thunderstorms
                                                            - flooding
                                                            - gusty_wind
                                                            - heavy_rain
                                                            - large_hail
                                                            - small_hail
                                                            - tornadoes
                                            required: [coverage, weather, intensity, visibility, attributes]
                                            additionalProperties: false
                                required: [validTime, value]
                                additionalProperties: false
                    required: [values]
                hazards:
                    type: object
                    properties:
                        values:
                            type: array
                            items:
                                type: object
                                properties:
                                    validTime:
                                        $ref: '#/components/schemas/ISO8601Interval'
                                    value:
                                        type: array
                                        items:
                                            description: A value object representing an expected hazard.
                                            type: object
                                            properties:
                                                phenomenon:
                                                    description: >
                                                        Hazard code. This value will correspond to a P-VTEC phenomenon
                                                        code as defined in NWS Directive 10-1703.
                                                    type: string
                                                    pattern: ^\w{2}$
                                                significance:
                                                    description: >
                                                        Significance code. This value will correspond to a P-VTEC
                                                        significance code as defined in NWS Directive 10-1703.

                                                        This will most frequently be "A" for a watch or "Y" for an
                                                        advisory.
                                                    type: string
                                                    pattern: ^\w$
                                                event_number:
                                                    description: >
                                                        Event number. If this hazard refers to a national or regional
                                                        center product (such as a Storm Prediction Center convective
                                                        watch), this value will be the sequence number of that product.
                                                    type: integer
                                                    nullable: true
                                            required: [phenomenon, significance, event_number]
                                required: [validTime, value]
                                additionalProperties: false
                    required: [values]
            additionalProperties:
                $ref: '#/components/schemas/GridpointQuantitativeValueLayer'
        GridpointQuantitativeValueLayer:
            description: >
                A gridpoint layer consisting of quantitative values (numeric values with associated units of measure).
            type: object
            properties:
                uom:
                    $ref: '#/components/schemas/UnitOfMeasure'
                values:
                    type: array
                    items:
                        type: object
                        properties:
                            validTime:
                                $ref: '#/components/schemas/ISO8601Interval'
                            value:
                                type: number
                                nullable: true
                        required: [validTime, value]
                        additionalProperties: false
            required: [values]
        GridpointGeoJson:
            allOf:
                - $ref: '#/components/schemas/GeoJsonFeature'
                -
                    type: object
                    properties:
                        properties:
                            $ref: '#/components/schemas/Gridpoint'
        GridpointJsonLd:
            $ref: '#/components/schemas/Gridpoint'
        GridpointForecast:
            description: A multi-day forecast for a 2.5km grid square.
            type: object
            properties:
                '@context':
                    $ref: '#/components/schemas/JsonLdContext'
                geometry:
                    $ref: '#/components/schemas/GeometryString'
                units:
                    $ref: '#/components/schemas/GridpointForecastUnits'
                forecastGenerator:
                    description: The internal generator class used to create the forecast text (used for NWS debugging).
                    type: string
                generatedAt:
                    description: The time this forecast data was generated.
                    type: string
                    format: date-time
                updateTime:
                    description: The last update time of the data this forecast was generated from.
                    type: string
                    format: date-time
                updated:
                    description: This property is deprecated (use updateTime instead).
                    deprecated: true
                    type: string
                    format: date-time
                validTimes:
                    $ref: '#/components/schemas/ISO8601Interval'
                elevation:
                    $ref: '#/components/schemas/QuantitativeValue'
                periods:
                    description: An array of forecast periods.
                    type: array
                    items:
                        $ref: '#/components/schemas/GridpointForecastPeriod'
            additionalProperties: false
        GridpointForecastPeriod:
            description: >
                An object containing forecast information for a specific time period (generally 12-hour or 1-hour).
            type: object
            properties:
                number:
                    description: Sequential period number.
                    type: integer
                    minimum: 1
                name:
                    description: >
                        A textual identifier for the period. This value will not be present for hourly forecasts.
                    type: string
                    example: Tuesday Night
                startTime:
                    description: The starting time that this forecast period is valid for.
                    type: string
                    format: date-time
                endTime:
                    description: The ending time that this forecast period is valid for.
                    type: string
                    format: date-time
                isDaytime:
                    description: Indicates whether this period is daytime or nighttime.
                    type: boolean
                temperature:
                    description: >
                        High/low temperature for the period, depending on whether the period is day or night.

                        This property as an integer value is deprecated. Future versions will express this value as a
                        quantitative value object. To make use of the future standard format now, set the
                        "forecast_temperature_qv" feature flag on the request.
                    oneOf:
                        - $ref: '#/components/schemas/QuantitativeValue'
                        - type: integer
                temperatureUnit:
                    description: >
                        The unit of the temperature value (Fahrenheit or Celsius).

                        This property is deprecated. Future versions will indicate the unit within the quantitative
                        value object for the temperature property. To make use of the future standard format now, set
                        the "forecast_temperature_qv" feature flag on the request.
                    type: string
                    deprecated: true
                    enum:
                        - F
                        - C
                temperatureTrend:
                    description: >
                        If not null, indicates a non-diurnal temperature trend for the period (either rising
                        temperature overnight, or falling temperature during the day)
                    type: string
                    enum:
                        - rising
                        - falling
                    nullable: true
                windSpeed:
                    description: >
                        Wind speed for the period.

                        This property as an string value is deprecated. Future versions will express this value as a
                        quantitative value object. To make use of the future standard format now, set the
                        "forecast_wind_speed_qv" feature flag on the request.
                    oneOf:
                        - $ref: '#/components/schemas/QuantitativeValue'
                        - type: string
                windGust:
                    description: >
                        Peak wind gust for the period.

                        This property as an string value is deprecated. Future versions will express this value as a
                        quantitative value object. To make use of the future standard format now, set the
                        "forecast_wind_speed_qv" feature flag on the request.
                    oneOf:
                        - $ref: '#/components/schemas/QuantitativeValue'
                        - type: string
                    nullable: true
                windDirection:
                    description: The prevailing direction of the wind for the period, using a 16-point compass.
                    type: string
                    enum: [N, NNE, NE, ENE, E, ESE, SE, SSE, S, SSW, SW, WSW, W, WNW, NW, NNW]
                icon:
                    description: A link to an icon representing the forecast summary.
                    deprecated: true
                    type: string
                    format: uri
                shortForecast:
                    description: A brief textual forecast summary for the period.
                    type: string
                detailedForecast:
                    description: A detailed textual forecast for the period.
                    type: string
            additionalProperties: false
        GridpointForecastUnits:
            description: Denotes the units used in the textual portions of the forecast.
            type: string
            enum:
                - us
                - si
            default: us
        GridpointForecastGeoJson:
            allOf:
                - $ref: '#/components/schemas/GeoJsonFeature'
                -
                    type: object
                    properties:
                        properties:
                            $ref: '#/components/schemas/GridpointForecast'
        GridpointForecastJsonLd:
            allOf:
                - $ref: '#/components/schemas/GridpointForecast'
                -
                    type: object
                    properties:
                        '@context':
                            $ref: '#/components/schemas/JsonLdContext'
                        geometry:
                            $ref: '#/components/schemas/GeometryString'
                    required: ['@context', geometry]
        ISO8601Duration:
            description: A time duration in ISO 8601 format.
            type: string
            pattern: ^P(\d+Y)?(\d+M)?(\d+D)?(T(\d+H)?(\d+M)?(\d+S)?)?$
            example: P2DT12H
        ISO8601Interval:
            description: >
                A time interval in ISO 8601 format. This can be one of:

                    1. Start and end time
                    2. Start time and duration
                    3. Duration and end time

                The string "NOW" can also be used in place of a start/end time.
            oneOf:
                -
                    type: string
                    pattern: ^(\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(Z|[+-]\d{2}:?\d{2}?)|NOW)\/(\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(Z|[+-]\d{2}:?\d{2}?)|NOW)$
                    example: 2007-03-01T13:00:00Z/2008-05-11T15:30:00Z
                -
                    type: string
                    pattern: ^(\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(Z|[+-]\d{2}:?\d{2}?)|NOW)\/P(\d+Y)?(\d+M)?(\d+D)?(T(\d+H)?(\d+M)?(\d+S)?)?$
                    example: 2007-03-01T13:00:00Z/P1Y2M10DT2H30M
                -
                    type: string
                    pattern: ^P(\d+Y)?(\d+M)?(\d+D)?(T(\d+H)?(\d+M)?(\d+S)?)?\/(\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(Z|[+-]\d{2}:?\d{2}?)|NOW)$
                    example: P1Y2M10DT2H30M/2008-05-11T15:30:00Z
        JsonLdContext:
            type: array
            items:
                additionalProperties: true
        LandRegionCode:
            description: >
                Land region code. These correspond to the six NWS regional headquarters:

                * AR: Alaska Region

                * CR: Central Region

                * ER: Eastern Region

                * PR: Pacific Region

                * SR: Southern Region

                * WR: Western Region
            type: string
            enum:
                - AR
                - CR
                - ER
                - PR
                - SR
                - WR
        MarineAreaCode:
            description: >
                Marine area code as defined in NWS Directive 10-302:

                * AM: Western North Atlantic Ocean and along U.S. East Coast south of Currituck Beach Light NC following the coastline into Gulf of Mexico to Ocean Reef FL including the Caribbean

                * AN: Western North Atlantic Ocean and along U.S. East Coast from Canadian border south to Currituck Beach Light NC

                * GM: Gulf of Mexico and along the U.S. Gulf Coast from the Mexican border to Ocean Reef FL

                * LC: Lake St. Clair

                * LE: Lake Erie

                * LH: Lake Huron

                * LM: Lake Michigan

                * LO: Lake Ontario

                * LS: Lake Superior

                * PH: Central Pacific Ocean including Hawaiian waters

                * PK: North Pacific Ocean near Alaska and along Alaska coastline including the Bering Sea and the Gulf of Alaska

                * PM: Western Pacific Ocean including Mariana Island waters

                * PS: South Central Pacific Ocean including American Samoa waters

                * PZ: Eastern North Pacific Ocean and along U.S. West Coast from Canadian border to Mexican border

                * SL: St. Lawrence River above St. Regis
            type: string
            enum:
                - AM
                - AN
                - GM
                - LC
                - LE
                - LH
                - LM
                - LO
                - LS
                - PH
                - PK
                - PM
                - PS
                - PZ
                - SL
        MarineRegionCode:
            description: >
                Marine region code. These are groups of marine areas combined.

                * AL: Alaska waters (PK)

                * AT: Atlantic Ocean (AM, AN)

                * GL: Great Lakes (LC, LE, LH, LM, LO, LS, SL)

                * GM: Gulf of Mexico (GM)

                * PA: Eastern Pacific Ocean and U.S. West Coast (PZ)

                * PI: Central and Western Pacific (PH, PM, PS)
            type: string
            enum:
                - AL
                - AT
                - GL
                - GM
                - PA
                - PI
        MetarPhenomenon:
            description: An object representing a decoded METAR phenomenon string.
            type: object
            properties:
                intensity:
                    type: string
                    enum:
                        - light
                        - heavy
                    nullable: true
                modifier:
                    type: string
                    enum:
                        - patches
                        - blowing
                        - low_drifting
                        - freezing
                        - shallow
                        - partial
                        - showers
                    nullable: true
                weather:
                    type: string
                    enum:
                        - fog_mist
                        - dust_storm
                        - dust
                        - drizzle
                        - funnel_cloud
                        - fog
                        - smoke
                        - hail
                        - snow_pellets
                        - haze
                        - ice_crystals
                        - ice_pellets
                        - dust_whirls
                        - spray
                        - rain
                        - sand
                        - snow_grains
                        - snow
                        - squalls
                        - sand_storm
                        - thunderstorms
                        - unknown
                        - volcanic_ash
                rawString:
                    type: string
                inVicinity:
                    type: boolean
            required: [intensity, modifier, weather, rawString]
            additionalProperties: false
        MetarSkyCoverage:
            type: string
            enum:
                - OVC
                - BKN
                - SCT
                - FEW
                - SKC
                - CLR
                - VV
        NWSCenterWeatherServiceUnitId:
            description: Three-letter identifier for a Center Weather Service Unit (CWSU).
            type: string
            enum:
                - ZAB
                - ZAN
                - ZAU
                - ZBW
                - ZDC
                - ZDV
                - ZFA
                - ZFW
                - ZHU
                - ZID
                - ZJX
                - ZKC
                - ZLA
                - ZLC
                - ZMA
                - ZME
                - ZMP
                - ZNY
                - ZOA
                - ZOB
                - ZSE
                - ZTL
        NWSForecastOfficeId:
            description: Three-letter identifier for a NWS office.
            type: string
            enum:
                # Eastern Region
                - AKQ
                - ALY
                - BGM
                - BOX
                - BTV
                - BUF
                - CAE
                - CAR
                - CHS
                - CLE
                - CTP
                - GSP
                - GYX
                - ILM
                - ILN
                - LWX
                - MHX
                - OKX
                - PBZ
                - PHI
                - RAH
                - RLX
                - RNK
                # Southern Region
                - ABQ
                - AMA
                - BMX
                - BRO
                - CRP
                - EPZ
                - EWX
                - FFC
                - FWD
                - HGX
                - HUN
                - JAN
                - JAX
                - KEY
                - LCH
                - LIX
                - LUB
                - LZK
                - MAF
                - MEG
                - MFL
                - MLB
                - MOB
                - MRX
                - OHX
                - OUN
                - SHV
                - SJT
                - SJU
                - TAE
                - TBW
                - TSA
                # Central Region
                - ABR
                - APX
                - ARX
                - BIS
                - BOU
                - CYS
                - DDC
                - DLH
                - DMX
                - DTX
                - DVN
                - EAX
                - FGF
                - FSD
                - GID
                - GJT
                - GLD
                - GRB
                - GRR
                - ICT
                - ILX
                - IND
                - IWX
                - JKL
                - LBF
                - LMK
                - LOT
                - LSX
                - MKX
                - MPX
                - MQT
                - OAX
                - PAH
                - PUB
                - RIW
                - SGF
                - TOP
                - UNR
                # Western Region
                - BOI
                - BYZ
                - EKA
                - FGZ
                - GGW
                - HNX
                - LKN
                - LOX
                - MFR
                - MSO
                - MTR
                - OTX
                - PDT
                - PIH
                - PQR
                - PSR
                - REV
                - SEW
                - SGX
                - SLC
                - STO
                - TFX
                - TWC
                - VEF
                # Alaska Region
                - AER
                - AFC
                - AFG
                - AJK
                - ALU
                # Pacific Region
                - GUM
                - HPA
                - HFO
                - PPG
                - STU
                # National Line Offices
                - NH1
                - NH2
                - ONA
                - ONP
        NWSNationalHQId:
            description: Three-letter identifier for NWS National HQ.
            type: string
            enum:
                - NWS
        NWSOfficeId:
            oneOf:
                - $ref: '#/components/schemas/NWSForecastOfficeId'
                - $ref: '#/components/schemas/NWSRegionalHQId'
                - $ref: '#/components/schemas/NWSNationalHQId'
        NWSRegionalHQId:
            description: Three-letter identifier for a NWS Regional HQ.
            type: string
            enum:
                - ARH
                - CRH
                - ERH
                - PRH
                - SRH
                - WRH
        NWSZoneID:
            description: >
                UGC identifier for a NWS forecast zone or county.

                The first two letters will correspond to either a state code or marine area code (see
                #/components/schemas/StateTerritoryCode and #/components/schemas/MarineAreaCode for lists of valid
                letter combinations).

                The third letter will be Z for public/fire zone or C for county.
            type: string
            pattern: ^(A[KLMNRSZ]|C[AOT]|D[CE]|FL|G[AMU]|I[ADLN]|K[SY]|L[ACEHMOS]|M[ADEINOST]|N[CDEHJMVY]|O[HKR]|P[AHKMRSZ]|S[CDL]|T[NX]|UT|V[AIT]|W[AIVY]|[HR]I)[CZ]\d{3}$
        NWSZoneType:
            type: string
            enum:
                - land
                - marine
                - forecast
                - public
                - coastal
                - offshore
                - fire
                - county
        Observation:
            type: object
            properties:
                '@context':
                    $ref: '#/components/schemas/JsonLdContext'
                geometry:
                    $ref: '#/components/schemas/GeometryString'
                '@id':
                    type: string
                    format: uri
                '@type':
                    type: string
                    enum: ['wx:ObservationStation']
                elevation:
                    $ref: '#/components/schemas/QuantitativeValue'
                station:
                    type: string
                    format: uri
                timestamp:
                    type: string
                    format: date-time
                rawMessage:
                    type: string
                textDescription:
                    type: string
                icon:
                    type: string
                    format: uri
                    deprecated: true
                presentWeather:
                    type: array
                    items:
                        $ref: '#/components/schemas/MetarPhenomenon'
                temperature:
                    $ref: '#/components/schemas/QuantitativeValue'
                dewpoint:
                    $ref: '#/components/schemas/QuantitativeValue'
                windDirection:
                    $ref: '#/components/schemas/QuantitativeValue'
                windSpeed:
                    $ref: '#/components/schemas/QuantitativeValue'
                windGust:
                    $ref: '#/components/schemas/QuantitativeValue'
                barometricPressure:
                    $ref: '#/components/schemas/QuantitativeValue'
                seaLevelPressure:
                    $ref: '#/components/schemas/QuantitativeValue'
                visibility:
                    $ref: '#/components/schemas/QuantitativeValue'
                maxTemperatureLast24Hours:
                    $ref: '#/components/schemas/QuantitativeValue'
                minTemperatureLast24Hours:
                    $ref: '#/components/schemas/QuantitativeValue'
                precipitationLastHour:
                    $ref: '#/components/schemas/QuantitativeValue'
                precipitationLast3Hours:
                    $ref: '#/components/schemas/QuantitativeValue'
                precipitationLast6Hours:
                    $ref: '#/components/schemas/QuantitativeValue'
                relativeHumidity:
                    $ref: '#/components/schemas/QuantitativeValue'
                windChill:
                    $ref: '#/components/schemas/QuantitativeValue'
                heatIndex:
                    $ref: '#/components/schemas/QuantitativeValue'
                cloudLayers:
                    type: array
                    items:
                        type: object
                        properties:
                            base:
                                $ref: '#/components/schemas/QuantitativeValue'
                            amount:
                                $ref: '#/components/schemas/MetarSkyCoverage'
                        required: [base, amount]
                        additionalProperties: false
            additionalProperties: false
        ObservationGeoJson:
            allOf:
                - $ref: '#/components/schemas/GeoJsonFeature'
                -
                    type: object
                    properties:
                        properties:
                            $ref: '#/components/schemas/Observation'
        ObservationJsonLd:
            $ref: '#/components/schemas/Observation'
        ObservationCollectionGeoJson:
            allOf:
                - $ref: '#/components/schemas/GeoJsonFeatureCollection'
                -
                    type: object
                    properties:
                        features:
                            type: array
                            items:
                                type: object
                                properties:
                                    properties:
                                        $ref: '#/components/schemas/Observation'
        ObservationCollectionJsonLd:
            type: object
            properties:
                '@context':
                    $ref: '#/components/schemas/JsonLdContext'
                '@graph':
                    type: array
                    items:
                        $ref: '#/components/schemas/Observation'
            additionalProperties: false
        ObservationStation:
            type: object
            properties:
                '@context':
                    $ref: '#/components/schemas/JsonLdContext'
                geometry:
                    $ref: '#/components/schemas/GeometryString'
                '@id':
                    type: string
                    format: uri
                '@type':
                    type: string
                    enum: ['wx:ObservationStation']
                elevation:
                    $ref: '#/components/schemas/QuantitativeValue'
                stationIdentifier:
                    type: string
                name:
                    type: string
                timeZone:
                    type: string
                    format: iana-time-zone-identifier
                forecast:
                    description: A link to the NWS public forecast zone containing this station.
                    type: string
                    format: uri
                county:
                    description: A link to the NWS county zone containing this station.
                    type: string
                    format: uri
                fireWeatherZone:
                    description: A link to the NWS fire weather forecast zone containing this station.
                    type: string
                    format: uri
            additionalProperties: false
        ObservationStationGeoJson:
            allOf:
                - $ref: '#/components/schemas/GeoJsonFeature'
                -
                    type: object
                    properties:
                        properties:
                            $ref: '#/components/schemas/ObservationStation'
        ObservationStationJsonLd:
            allOf:
                - $ref: '#/components/schemas/ObservationStation'
                -
                    type: object
                    properties:
                        '@context':
                            $ref: '#/components/schemas/JsonLdContext'
                        geometry:
                            $ref: '#/components/schemas/GeometryString'
                    required: ['@context', geometry]
        ObservationStationCollectionGeoJson:
            allOf:
                - $ref: '#/components/schemas/GeoJsonFeatureCollection'
                -
                    type: object
                    properties:
                        features:
                            type: array
                            items:
                                type: object
                                properties:
                                    properties:
                                        $ref: '#/components/schemas/ObservationStation'
                        observationStations:
                            type: array
                            items:
                                type: string
                                format: uri
        ObservationStationCollectionJsonLd:
            type: object
            properties:
                '@context':
                    $ref: '#/components/schemas/JsonLdContext'
                '@graph':
                    type: array
                    items:
                        $ref: '#/components/schemas/ObservationStation'
                observationStations:
                    type: array
                    items:
                        type: string
                        format: uri
            additionalProperties: false
        Office:
            type: object
            properties:
                '@context':
                    $ref: '#/components/schemas/JsonLdContext'
                '@type':
                    type: string
                    enum: [GovernmentOrganization]
                '@id':
                    type: string
                    format: uri
                id:
                    type: string
                name:
                    type: string
                address:
                    type: object
                    properties:
                        '@type':
                            type: string
                            enum: [PostalAddress]
                        streetAddress:
                            type: string
                        addressLocality:
                            type: string
                        addressRegion:
                            type: string
                        postalCode:
                            type: string
                    additionalProperties: false
                telephone:
                    type: string
                faxNumber:
                    type: string
                email:
                    type: string
                sameAs:
                    type: string
                    format: uri
                nwsRegion:
                    type: string
                parentOrganization:
                    type: string
                    format: uri
                responsibleCounties:
                    type: array
                    items:
                        type: string
                        format: uri
                responsibleForecastZones:
                    type: array
                    items:
                        type: string
                        format: uri
                responsibleFireZones:
                    type: array
                    items:
                        type: string
                        format: uri
                approvedObservationStations:
                    type: array
                    items:
                        type: string
                        format: uri
            additionalProperties: false
        OfficeHeadline:
            type: object
            properties:
                '@context':
                    $ref: '#/components/schemas/JsonLdContext'
                '@id':
                    type: string
                    format: uri
                id:
                    type: string
                office:
                    type: string
                    format: uri
                important:
                    type: boolean
                issuanceTime:
                    type: string
                    format: date-time
                link:
                    type: string
                    format: uri
                name:
                    type: string
                title:
                    type: string
                summary:
                    type: string
                    nullable: true
                content:
                    type: string
        OfficeHeadlineCollection:
            type: object
            properties:
                '@context':
                    $ref: '#/components/schemas/JsonLdContext'
                '@graph':
                    type: array
                    items:
                        $ref: '#/components/schemas/OfficeHeadline'
            required: ['@context', '@graph']
            additionalProperties: false
        Point:
            type: object
            properties:
                '@context':
                    $ref: '#/components/schemas/JsonLdContext'
                geometry:
                    $ref: '#/components/schemas/GeometryString'
                '@id':
                    type: string
                    format: uri
                '@type':
                    type: string
                    enum: ['wx:Point']
                cwa:
                    $ref: '#/components/schemas/NWSForecastOfficeId'
                forecastOffice:
                    type: string
                    format: uri
                gridId:
                    $ref: '#/components/schemas/NWSForecastOfficeId'
                gridX:
                    type: integer
                    minimum: 0
                gridY:
                    type: integer
                    minimum: 0
                forecast:
                    type: string
                    format: uri
                forecastHourly:
                    type: string
                    format: uri
                forecastGridData:
                    type: string
                    format: uri
                observationStations:
                    type: string
                    format: uri
                relativeLocation:
                    oneOf:
                        - $ref: '#/components/schemas/RelativeLocationGeoJson'
                        - $ref: '#/components/schemas/RelativeLocationJsonLd'
                forecastZone:
                    type: string
                    format: uri
                county:
                    type: string
                    format: uri
                fireWeatherZone:
                    type: string
                    format: uri
                timeZone:
                    type: string
                radarStation:
                    type: string
        PointGeoJson:
            allOf:
                - $ref: '#/components/schemas/GeoJsonFeature'
                -
                    type: object
                    properties:
                        properties:
                            $ref: '#/components/schemas/Point'
        PointJsonLd:
            allOf:
                - $ref: '#/components/schemas/Point'
                -
                    type: object
                    properties:
                        '@context':
                            $ref: '#/components/schemas/JsonLdContext'
                        geometry:
                            $ref: '#/components/schemas/GeometryString'
                    required: ['@context', geometry]
        PointString:
            type: string
            pattern: ^(-?\d+(?:\.\d+)?),(-?\d+(?:\.\d+)?)$
        ProblemDetail:
            description: Detail about an error. This document conforms to RFC 7807 (Problem Details for HTTP APIs).
            type: object
            properties:
                type:
                    type: string
                    format: uri
                    default: about:blank
                    description: >
                        A URI reference (RFC 3986) that identifies the problem type. This is only an identifier and is
                        not necessarily a resolvable URL.
                    example: urn:noaa:nws:api:UnexpectedProblem
                title:
                    type: string
                    description: A short, human-readable summary of the problem type.
                    example: Unexpected Problem
                status:
                    type: number
                    minimum: 100
                    maximum: 999
                    description: >
                        The HTTP status code (RFC 7231, Section 6) generated by the origin server for this occurrence
                        of the problem.
                    example: 500
                detail:
                    type: string
                    description: A human-readable explanation specific to this occurrence of the problem.
                    example: An unexpected problem has occurred.
                instance:
                    type: string
                    format: uri
                    description: >
                        A URI reference (RFC 3986) that identifies the specific occurrence of the problem. This is only
                        an identifier and is not necessarily a resolvable URL.
                    example: urn:noaa:nws:api:request:493c3a1d-f87e-407f-ae2c-24483f5aab63
                correlationId:
                    type: string
                    description: >
                        A unique identifier for the request, used for NWS debugging purposes. Please include this
                        identifier with any correspondence to help us investigate your issue.
                    example: 493c3a1d-f87e-407f-ae2c-24483f5aab63
            required:
                - type
                - title
                - status
                - detail
                - instance
                - correlationId
            additionalProperties: true
        QuantitativeValue:
            description: >
                A structured value representing a measurement and its unit of measure. This object is a slighly
                modified version of the schema.org definition at https://schema.org/QuantitativeValue
            type: object
            properties:
                value:
                    description: A measured value
                    type: number
                    nullable: true
                maxValue:
                    description: The maximum value of a range of measured values
                    type: number
                minValue:
                    description: The minimum value of a range of measured values
                    type: number
                unitCode:
                    $ref: '#/components/schemas/UnitOfMeasure'
                qualityControl:
                    description: >
                        For values in observation records, the quality control flag from the MADIS system. The
                        definitions of these flags can be found at https://madis.ncep.noaa.gov/madis_sfc_qc_notes.shtml
                    type: string
                    enum: [Z,C,S,V,X,Q,G,B,T]
            additionalProperties: false
        RegionCode:
            oneOf:
                - $ref: '#/components/schemas/LandRegionCode'
                - $ref: '#/components/schemas/MarineRegionCode'
        RelativeLocation:
            type: object
            properties:
                city:
                    type: string
                state:
                    type: string
                distance:
                    $ref: '#/components/schemas/QuantitativeValue'
                bearing:
                    $ref: '#/components/schemas/QuantitativeValue'
        RelativeLocationGeoJson:
            allOf:
                - $ref: '#/components/schemas/GeoJsonFeature'
                -
                    type: object
                    properties:
                        properties:
                            $ref: '#/components/schemas/RelativeLocation'
        RelativeLocationJsonLd:
            allOf:
                - $ref: '#/components/schemas/RelativeLocation'
                -
                    type: object
                    properties:
                        geometry:
                            $ref: '#/components/schemas/GeometryString'
                    required: [geometry]
        Sigmet:
            type: object
            properties:
                id:
                    type: string
                    format: uri
                issueTime:
                    type: string
                    format: date-time
                fir:
                    $ref: '#/components/schemas/FIRIdentifier'
                sequence:
                    type: string
                phenomenon:
                    type: string
                    format: uri
                    nullable: true
                start:
                    type: string
                    format: date-time
                end:
                    type: string
                    format: date-time
            additionalProperties: false
        SigmetCollectionGeoJson:
            allOf:
                - $ref: '#/components/schemas/GeoJsonFeatureCollection'
                -
                    type: object
                    properties:
                        features:
                            type: array
                            items:
                                $ref: '#/components/schemas/SigmetGeoJson'
        SigmetGeoJson:
            allOf:
                - $ref: '#/components/schemas/GeoJsonFeature'
                -
                    type: object
                    properties:
                        properties:
                            $ref: '#/components/schemas/Sigmet'
        SigmetSequenceNumber:
            type: string
        StateTerritoryCode:
            type: string
            enum:
                - AL
                - AK
                - AS
                - AR
                - AZ
                - CA
                - CO
                - CT
                - DE
                - DC
                - FL
                - GA
                - GU
                - HI
                - ID
                - IL
                - IN
                - IA
                - KS
                - KY
                - LA
                - ME
                - MD
                - MA
                - MI
                - MN
                - MS
                - MO
                - MT
                - NE
                - NV
                - NH
                - NJ
                - NM
                - NY
                - NC
                - ND
                - OH
                - OK
                - OR
                - PA
                - PR
                - RI
                - SC
                - SD
                - TN
                - TX
                - UT
                - VT
                - VI
                - VA
                - WA
                - WV
                - WI
                - WY
        TextProduct:
            type: object
            properties:
                '@context':
                    $ref: '#/components/schemas/JsonLdContext'
                '@id':
                    type: string
                    format: uri
                id:
                    type: string
                wmoCollectiveId:
                    type: string
                issuingOffice:
                    type: string
                issuanceTime:
                    type: string
                    format: date-time
                productCode:
                    type: string
                productName:
                    type: string
                productText:
                    type: string
            additionalProperties: false
        TextProductCollection:
            type: object
            properties:
                '@context':
                    $ref: '#/components/schemas/JsonLdContext'
                '@graph':
                    type: array
                    items:
                        $ref: '#/components/schemas/TextProduct'
            additionalProperties: false
        TextProductTypeCollection:
            type: object
            properties:
                '@context':
                    $ref: '#/components/schemas/JsonLdContext'
                '@graph':
                    type: array
                    items:
                        type: object
                        properties:
                            productCode:
                                type: string
                            productName:
                                type: string
                        required: [productCode, productName]
                        additionalProperties: false
            additionalProperties: false
        TextProductLocationCollection:
            type: object
            properties:
                '@context':
                    $ref: '#/components/schemas/JsonLdContext'
                'locations':
                    type: object
                    additionalProperties:
                        type: string
                        nullable: true
            additionalProperties: false
        Time:
            description: A time (in HHMM format). This is always specified in UTC (Zulu) time.
            type: string
            pattern: '^([01][0-9]|2[0-3])[0-5][0-9]$'
        UnitOfMeasure:
            description: >
                A string denoting a unit of measure, expressed in the format "{unit}" or "{namespace}:{unit}".

                Units with the namespace "wmo" or "wmoUnit" are defined in the World Meteorological Organization Codes
                Registry at http://codes.wmo.int/common/unit and should be canonically resolvable to
                http://codes.wmo.int/common/unit/{unit}.

                Units with the namespace "nwsUnit" are currently custom and do not align to any standard.

                Units with no namespace or the namespace "uc" are compliant with the Unified Code for Units of Measure
                syntax defined at https://unitsofmeasure.org/. This also aligns with recent versions of the Geographic
                Markup Language (GML) standard, the IWXXM standard, and OGC Observations and Measurements v2.0
                (ISO/DIS 19156).

                Namespaced units are considered deprecated. We will be aligning API to use the same standards as
                GML/IWXXM in the future.
            type: string
            pattern: ^((wmo|uc|wmoUnit|nwsUnit):)?.*$
        Zone:
            type: object
            properties:
                '@context':
                    $ref: '#/components/schemas/JsonLdContext'
                geometry:
                    $ref: '#/components/schemas/GeometryString'
                '@id':
                    type: string
                    format: uri
                '@type':
                    type: string
                    enum: ['wx:Zone']
                id:
                    $ref: '#/components/schemas/NWSZoneID'
                type:
                    $ref: '#/components/schemas/NWSZoneType'
                name:
                    type: string
                effectiveDate:
                    type: string
                    format: date-time
                expirationDate:
                    type: string
                    format: date-time
                state:
                    oneOf:
                        - $ref: '#/components/schemas/StateTerritoryCode'
                        -
                            type: string
                            enum: ['']
                            nullable: true
                cwa:
                    type: array
                    items:
                        $ref: '#/components/schemas/NWSForecastOfficeId'
                forecastOffices:
                    type: array
                    items:
                        type: string
                        format: uri
                timeZone:
                    type: array
                    items:
                        type: string
                        format: iana-time-zone-identifier
                observationStations:
                    type: array
                    items:
                        type: string
                        format: uri
                radarStation:
                    type: string
                    nullable: true
            additionalProperties: false
        ZoneGeoJson:
            allOf:
                - $ref: '#/components/schemas/GeoJsonFeature'
                -
                    type: object
                    properties:
                        properties:
                            $ref: '#/components/schemas/Zone'
        ZoneJsonLd:
            $ref: '#/components/schemas/Zone'
        ZoneCollectionGeoJson:
            allOf:
                - $ref: '#/components/schemas/GeoJsonFeatureCollection'
                -
                    type: object
                    properties:
                        features:
                            type: array
                            items:
                                type: object
                                properties:
                                    properties:
                                        $ref: '#/components/schemas/Zone'
        ZoneCollectionJsonLd:
            type: object
            properties:
                '@context':
                    $ref: '#/components/schemas/JsonLdContext'
                '@graph':
                    type: array
                    items:
                        $ref: '#/components/schemas/Zone'
            additionalProperties: false
        ZoneForecast:
            description: An object representing a zone area forecast.
            type: object
            properties:
                '@context':
                    $ref: '#/components/schemas/JsonLdContext'
                geometry:
                    $ref: '#/components/schemas/GeometryString'
                zone:
                    description: An API link to the zone this forecast is for.
                    type: string
                    format: uri
                updated:
                    description: The time this zone forecast product was published.
                    type: string
                    format: date-time
                periods:
                    description: An array of forecast periods.
                    type: array
                    items:
                        type: object
                        properties:
                            number:
                                description: A sequential identifier number.
                                type: integer
                            name:
                                description: A textual description of the period.
                                type: string
                                example: This Afternoon
                            detailedForecast:
                                description: A detailed textual forecast for the period.
                                type: string
                        required: [number, name, detailedForecast]
                        additionalProperties: false
            additionalProperties: false
        ZoneForecastGeoJson:
            allOf:
                - $ref: '#/components/schemas/GeoJsonFeature'
                -
                    type: object
                    properties:
                        properties:
                            $ref: '#/components/schemas/ZoneForecast'
        ZoneForecastJsonLd:
            $ref: '#/components/schemas/ZoneForecast'
    parameters:
        AlertArea:
            name: area
            in: query
            description: >
                State/territory code or marine area code

                This parameter is incompatible with the following parameters: point, region, region_type, zone
            schema:
                type: array
                items:
                    $ref: '#/components/schemas/AreaCode'
            style: form
            explode: false
            x-symfony:
                exclusive-group: geospatial
        AlertCertainty:
            name: certainty
            in: query
            description: Certainty (observed, likely, possible, unlikely, unknown)
            schema:
                type: array
                items:
                    $ref: '#/components/schemas/AlertCertainty'
            style: form
            explode: false
        AlertCode:
            name: code
            in: query
            description: Event code
            schema:
                type: array
                items:
                    type: string
                    pattern: ^\w{3}$
            style: form
            explode: false
        AlertEventName:
            name: event
            in: query
            description: Event name
            schema:
                type: array
                items:
                    type: string
                    pattern: ^[A-Za-z0-9 ]+$
            style: form
            explode: false
        AlertMessageType:
            name: message_type
            in: query
            description: Message type (alert, update, cancel)
            schema:
                type: array
                items:
                    type: string
                    enum: [alert, update, cancel]
            style: form
            explode: false
        AlertPoint:
            name: point
            in: query
            description: >
                Point (latitude,longitude)

                This parameter is incompatible with the following parameters: area, region, region_type, zone
            schema:
                $ref: '#/components/schemas/PointString'
            x-symfony:
                exclusive-group: geospatial
        AlertRegion:
            name: region
            in: query
            description: >
                Marine region code

                This parameter is incompatible with the following parameters: area, point, region_type, zone
            schema:
                type: array
                items:
                    $ref: '#/components/schemas/MarineRegionCode'
            style: form
            explode: false
            x-symfony:
                exclusive-group: geospatial
        AlertRegionType:
            name: region_type
            in: query
            description: >
                Region type (land or marine)

                This parameter is incompatible with the following parameters: area, point, region, zone
            schema:
                type: string
                enum:
                    - land
                    - marine
            x-symfony:
                exclusive-group: geospatial
        AlertSeverity:
            name: severity
            in: query
            description: Severity (extreme, severe, moderate, minor, unknown)
            schema:
                type: array
                items:
                    $ref: '#/components/schemas/AlertSeverity'
            style: form
            explode: false
        AlertStatus:
            name: status
            in: query
            description: Status (actual, exercise, system, test, draft)
            schema:
                type: array
                items:
                    type: string
                    enum: [actual, exercise, system, test, draft]
            style: form
            explode: false
        AlertUrgency:
            name: urgency
            in: query
            description: Urgency (immediate, expected, future, past, unknown)
            schema:
                type: array
                items:
                    $ref: '#/components/schemas/AlertUrgency'
            style: form
            explode: false
        AlertZone:
            name: zone
            in: query
            description: >
                Zone ID (forecast or county)

                This parameter is incompatible with the following parameters: area, point, region, region_type
            schema:
                type: array
                items:
                    $ref: '#/components/schemas/NWSZoneID'
            style: form
            explode: false
            x-symfony:
                exclusive-group: geospatial
        Date:
            name: date
            in: path
            required: true
            description: Date (YYYY-MM-DD format)
            schema:
                $ref: '#/components/schemas/Date'
        Debug:
            name: debug
            in: query
            description: Debug mode (for internal use only)
            schema:
                type: boolean
            x-symfony:
                private: true
        FIRIdentifier:
            name: fir
            in: path
            required: true
            description: FIR identifier
            schema:
                $ref: '#/components/schemas/FIRIdentifier'
        GridpointForecastFeatureFlags:
            name: Feature-Flags
            in: header
            required: false
            description: >
                Enable future and experimental features (see documentation for more info):

                * forecast_temperature_qv: Represent temperature as QuantitativeValue

                * forecast_wind_speed_qv: Represent wind speed as QuantitativeValue
            schema:
                type: array
                items:
                    type: string
                    enum:
                        - forecast_temperature_qv
                        - forecast_wind_speed_qv
            style: simple
            explode: false
        GridpointForecastUnits:
            name: units
            in: query
            description: Use US customary or SI (metric) units in textual output
            schema:
                $ref: '#/components/schemas/GridpointForecastUnits'
        GridpointWFO:
            name: wfo
            in: path
            required: true
            description: Forecast office ID
            schema:
                $ref: '#/components/schemas/NWSForecastOfficeId'
        GridpointX:
            name: x
            in: path
            required: true
            description: Forecast grid X coordinate
            schema:
                type: integer
                minimum: 0
        GridpointY:
            name: 'y'
            in: path
            required: true
            description: Forecast grid Y coordinate
            schema:
                type: integer
                minimum: 0
        Limit:
            name: limit
            in: query
            description: Limit
            schema:
                type: integer
                minimum: 1
                maximum: 500
        NWSCenterWeatherServiceUnitId:
            name: cwsuId
            in: path
            required: true
            description: NWS CWSU ID
            schema:
                $ref: '#/components/schemas/NWSCenterWeatherServiceUnitId'
        NWSOfficeId:
            name: officeId
            in: path
            required: true
            description: NWS office ID
            schema:
                $ref: '#/components/schemas/NWSOfficeId'
        NWSZoneId:
            name: zoneId
            in: path
            required: true
            description: NWS public zone/county identifier
            schema:
                $ref: '#/components/schemas/NWSZoneID'
        ObservationStationId:
            name: stationId
            in: path
            required: true
            description: Observation station ID
            schema:
                type: string
        PaginationCursor:
            name: cursor
            in: query
            description: Pagination cursor
            schema:
                type: string
        PathPoint:
            name: point
            in: path
            required: true
            description: Point (latitude, longitude)
            schema:
                $ref: '#/components/schemas/PointString'
        QueryDate:
            name: date
            in: query
            description: Date (YYYY-MM-DD format)
            schema:
                $ref: '#/components/schemas/Date'
        QueryStartTime:
            name: start
            in: query
            description: Start time
            schema:
                type: string
                format: date-time
        QueryEndTime:
            name: end
            in: query
            description: End time
            schema:
                type: string
                format: date-time
        SigmetSequenceNumber:
            name: sequence
            in: path
            required: true
            description: SIGMET sequence number
            schema:
                $ref: '#/components/schemas/SigmetSequenceNumber'
        Time:
            name: time
            in: path
            required: true
            description: Time (HHMM format). This time is always specified in UTC (Zulu) time.
            schema:
                $ref: '#/components/schemas/Time'
    responses:
        AlertCollection:
            description: A collection of alerts.
            headers:
                X-Correlation-Id:
                    $ref: '#/components/headers/CorrelationId'
                X-Request-Id:
                    $ref: '#/components/headers/RequestId'
                X-Server-Id:
                    $ref: '#/components/headers/ServerId'
            content:
                application/geo+json:
                    schema:
                        $ref: '#/components/schemas/AlertCollectionGeoJson'
                application/ld+json:
                    schema:
                        $ref: '#/components/schemas/AlertCollectionJsonLd'
                application/atom+xml:
                    schema:
                        $ref: '#/components/schemas/AlertAtomFeed'
        Error:
            description: An error response.
            headers:
                X-Correlation-Id:
                    $ref: '#/components/headers/CorrelationId'
                X-Request-Id:
                    $ref: '#/components/headers/RequestId'
                X-Server-Id:
                    $ref: '#/components/headers/ServerId'
            content:
                application/problem+json:
                    schema:
                        $ref: '#/components/schemas/ProblemDetail'
        GridpointForecast:
            description: A forecast for a gridpoint.
            headers:
                X-Correlation-Id:
                    $ref: '#/components/headers/CorrelationId'
                X-Request-Id:
                    $ref: '#/components/headers/RequestId'
                X-Server-Id:
                    $ref: '#/components/headers/ServerId'
            content:
                application/geo+json:
                    schema:
                        $ref: '#/components/schemas/GridpointForecastGeoJson'
                application/ld+json:
                    schema:
                        $ref: '#/components/schemas/GridpointForecastJsonLd'
                application/vnd.noaa.dwml+xml:
                    schema: {}
        Observation:
            description: An observation record.
            headers:
                X-Correlation-Id:
                    $ref: '#/components/headers/CorrelationId'
                X-Request-Id:
                    $ref: '#/components/headers/RequestId'
                X-Server-Id:
                    $ref: '#/components/headers/ServerId'
            content:
                application/geo+json:
                    schema:
                        $ref: '#/components/schemas/ObservationGeoJson'
                application/ld+json:
                    schema:
                        $ref: '#/components/schemas/ObservationJsonLd'
                application/vnd.noaa.uswx+xml:
                    schema: {}
                application/vnd.noaa.obs+xml:
                    schema: {}
        ObservationCollection:
            description: A collection of observation records.
            headers:
                X-Correlation-Id:
                    $ref: '#/components/headers/CorrelationId'
                X-Request-Id:
                    $ref: '#/components/headers/RequestId'
                X-Server-Id:
                    $ref: '#/components/headers/ServerId'
            content:
                application/geo+json:
                    schema:
                        $ref: '#/components/schemas/ObservationCollectionGeoJson'
                application/ld+json:
                    schema:
                        $ref: '#/components/schemas/ObservationCollectionJsonLd'
        ObservationStationCollection:
            description: A collection of observation stations.
            headers:
                X-Correlation-Id:
                    $ref: '#/components/headers/CorrelationId'
                X-Request-Id:
                    $ref: '#/components/headers/RequestId'
                X-Server-Id:
                    $ref: '#/components/headers/ServerId'
            content:
                application/geo+json:
                    schema:
                        $ref: '#/components/schemas/ObservationStationCollectionGeoJson'
                application/ld+json:
                    schema:
                        $ref: '#/components/schemas/ObservationStationCollectionJsonLd'
    headers:
        CorrelationId:
            description: >
                A unique identifier for the request, used for NWS debugging purposes. Please include this
                identifier with any correspondence to help us investigate your issue.
            schema:
                type: string
        RequestId:
            description: >
                A unique identifier for the request, used for NWS debugging purposes. Please include this
                identifier with any correspondence to help us investigate your issue.
            schema:
                type: string
        ServerId:
            description: >
                The identifier of the server that generated the response, used for NWS debugging purposes. Please
                include this identifier with any correspondence to help us investigate your issue.
            schema:
                type: string
    securitySchemes:
        userAgent:
            type: apiKey
            name: User-Agent
            in: header
            description: >
                We require that all consumers of the API include a User-Agent header in requests. This is due to a high
                number of scripts exhibiting abusive behavior (intentional or unintentional). We recommend setting the
                value to something that identifies your application and includes a contact email. This will help us
                contact you if we notice unusual behavior and also aid in troubleshooting issues.

                The API remains open and free to use and there are no limits imposed based on the User-Agent string.

                This mechanism will be replaced with a more typical API key system at a later date.
